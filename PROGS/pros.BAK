* -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
*  FileName PROS.PRG <-- This file create by UnFoxAll
* -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-



PROCEDURE varpublic
 LOCAL OLDSELE
 PUBLIC DEFANAMA , DEFAALAMAT , DEFAKOTA , DEFAPHONE , DEFAIDLEMBAGA , DEFAPIMPINAN ,  ;
      DEFAJABATAN , DEFAPENGADILAN
 PUBLIC DEFAFMTANGG , DEFAFMTSIMP , DEFAFMTPINJ , DEFAFMTPK , DEFAFMTAKT
 PUBLIC DEFANOPERKAS , DEFANOPERMATERAI , DEFANOPERNOTARIS , DEFANOPERPREMI ,  ;
      DEFANOPERTRANS , DEFANOPERSURVEI , DEFANOPERTTPDEP
 PUBLIC DEFANOPERSIMPK , DEFANOPERSIMSMK , DEFANOPERSIMWJB , DEFANOPERPENYERT ,  ;
      DEFANOPERSERTA
 PUBLIC DEFAPROSESADM , DEFAPROSESPROVISI , DEFAPROSENDENDA , DEFATENORDENDA ,  ;
      DEFAKETLAIN , DEFAPROSENLAIN
 PUBLIC DEFANOMIPOKOK , DEFANOMIWAJIB , DEFANOMISMK , DEFATGLBUNGASIMP , DEFASYSTEMAKT ,  ;
      DEFAAKRUSIMPANAN , DEFAAKRUPINJAMAN , DEFAAKRUADM , DEFAAKRUBIAYA
 PUBLIC DEFAKANTORASAL
 PUBLIC DEFAVALIDASI , DEFANOTIFIKASI , DEFASMSGATEWAY
 PUBLIC DEFANOPERAKA , DEFANOPERAKP
 PUBLIC DEFASHU_RAT , DEFASHU_THR , DEFASHU_OPER , DEFASHU_SRG , DEFASHU_BEA ,  ;
      DEFASHU_DOOR
 PUBLIC DEFASHU_TRAN , DEFASHU_TALI , DEFASHU_TUNJ1 , DEFASHU_TUNJ2 , DEFASHU_TUNJ3
 PUBLIC DEFASHU_TUNJ4 , DEFASHU_DPLK , DEFASHU_PEMEL , DEFASHU_LEMB
 PUBLIC DEFAJURSHU_RAT , DEFAJURSHU_THR , DEFAJURSHU_OPER , DEFAJURSHU_SRG ,  ;
      DEFAJURSHU_BEA , DEFAJURSHU_DOOR
 PUBLIC DEFAJURSHU_TRAN , DEFAJURSHU_TALI , DEFAJURSHU_TUNJ1 , DEFAJURSHU_TUNJ2 ,  ;
      DEFAJURSHU_TUNJ3
 PUBLIC DEFAJURSHU_TUNJ4 , DEFAJURSHU_DPLK , DEFAJURSHU_PEMEL , DEFAJURSHU_LEMB
 PUBLIC DEFANOPERFORMULA , DEFANOPERPHUNOW , DEFANOPERPHULALU
 PUBLIC DEFATABSTOR , DEFATABAMB , DEFATABPBK , DEFATABBG , DEFATABEDT , DEFATABSLD ,  ;
      DEFATABPJK , DEFATABADM , DEFATABBGDEP
 PUBLIC DEFADEPSTOR , DEFADEPBG , DEFADEPPJK , DEFADEPAMBPK , DEFADEPAMBBG ,  ;
      DEFADEPPBKBG , DEFADEPPBKPK1 , DEFADEPPBKPK2
 PUBLIC DEFAPINSTOR , DEFAPINPBK , DEFAPINPOT , DEFAPINTRK , DEFAPINPBK2 , DEFAPINJASA
 PUBLIC DEFAAUTONOREK , DEFAPROSMIGRASI , DEFAJENISKOP
 PUBLIC defakiri1,defakiri22,defakiri3,defatengah1,defatengah,defatengah3,defakanan1,defakanan2,defakanan3
 
 STORE '0' TO DEFAVALIDASI , DEFANOTIFIKASI , DEFASMSGATEWAY
 STORE '01' TO DEFATABSTOR , DEFADEPSTOR , DEFAPINSTOR
 STORE '02' TO DEFATABAMB , DEFADEPBG , DEFAPINPBK
 STORE '03' TO DEFATABPBK , DEFADEPPJK , DEFAPINPOT
 STORE '04' TO DEFATABBG , DEFADEPAMBPK , DEFAPINTRK
 STORE '05' TO DEFATABEDT , DEFADEPAMBBG , DEFAPINPBK2
 STORE '06' TO DEFATABSLD , DEFADEPPBKBG , DEFAPINJASA
 STORE '07' TO DEFATABPJK , DEFADEPPBKPK1
 STORE '08' TO DEFATABADM , DEFADEPPBKPK2
 STORE '09' TO DEFATABBGDEP
 DEFAAUTONOREK = 1
 DEFAPROSMIGRASI = 0
 DEFANOPERAKP = ''
 DEFANOPERAKA = ''
 DEFAKANTORASAL = ''
 DEFAPROSENDENDA = 6
 DEFATENORDENDA = 3
 DEFAJENISKOP = 'KSP KONVENSIONAL'
 TGLNOW = DATE()
 DEFASETNOREK = '1'
 DEFAAUTOBERKAS = 'Y'
 OLDSELE = SELECT()
 CSQL =  ;
      "select ket2,keterangan from setsandi where kantor='" + DEFAKANTOR +  ;
"' and kode='SYS' and sandi='PUB'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 DEFAPROSMIGRASI = CARIPUBLIC('PROS_MIGRASI')
 DEFAMODELNRC = VAL(CARIPUBLIC('NRC_MODEL'))
 DEFANAMA = CARIPUBLIC('NAMA')
 DEFAALAMAT = CARIPUBLIC('ALAMAT')
 DEFAKOTA = CARIPUBLIC('KOTA')
 DEFAPHONE = CARIPUBLIC('PHONE')
 DEFAIDLEMBAGA = CARIPUBLIC('IDLEMBAGA')
 DEFAPIMPINAN = CARIPUBLIC('PIMPINAN')
 DEFAJABATAN = CARIPUBLIC('JABATAN')
 DEFAPENGADILAN = CARIPUBLIC('PENGADILAN')
 DEFAJENISKOP = CARIPUBLIC('JENISKOP')
 DEFAFMTANGG = CARIPUBLIC('FMTANGG')
 DEFAFMTSIMP = CARIPUBLIC('FMTSIMP')
 DEFAFMTPINJ = CARIPUBLIC('FMTPINJ')
 DEFAFMTPK = CARIPUBLIC('FMTPK')
 DEFAFMTAKT = CARIPUBLIC('FMTAKT')
 DEFANOPERKAS = CARIPUBLIC('NOPERKAS')
 DEFANOPERMATERAI = CARIPUBLIC('NOPERMATERAI')
 DEFANOPERNOTARIS = CARIPUBLIC('NOPERNOTARIS')
 DEFANOPERPREMI = CARIPUBLIC('NOPERPREMI')
 DEFANOPERTRANS = CARIPUBLIC('NOPERBIAYA')
 DEFANOPERSURVEI = CARIPUBLIC('NOPERSURVEI')
 DEFANOPERTTPDEP = CARIPUBLIC('NOPERTTPDEP')
 DEFANOPERAKA = CARIPUBLIC('NOPERAKA')
 DEFANOPERAKP = CARIPUBLIC('NOPERAKP')
 DEFANOPERSIMPK = CARIPUBLIC('NOPERSIMPK')
 DEFANOPERSIMWJB = CARIPUBLIC('NOPERSIMWJB')
 DEFANOPERSIMSMK = CARIPUBLIC('NOPERSIMSMK')
 DEFANOPERPENYERT = CARIPUBLIC('NOPERPENYERT')
 DEFANOPERSERTA = CARIPUBLIC('NOPERSERTA')
 DEFANOPERPHULALU = CARIPUBLIC('NOPERLABALALU')
 DEFANOPERPHUNOW = CARIPUBLIC('NOPERLABANOW')
 DEFANOPERFORMULA = CARIPUBLIC('NOPERFORMULA')
 DEFAPROSESADM = VAL(CARIPUBLIC('PROSENADM'))
 DEFAPROSESPROVISI = VAL(CARIPUBLIC('PROSENPROVISI'))
 DEFAPROSENDENDA = VAL(CARIPUBLIC('PROSENDENDA'))
 DEFATENORDENDA = VAL(CARIPUBLIC('TENORDENDA'))
 DEFAKETLAIN = CARIPUBLIC('KETLAIN')
 DEFAPROSENLAIN = VAL(CARIPUBLIC('PROSENLAIN'))
 DEFANOMIPOKOK = VAL(CARIPUBLIC('NOMIPOKOK'))
 DEFANOMIWAJIB = VAL(CARIPUBLIC('NOMIWAJIB'))
 DEFANOMISMK = VAL(CARIPUBLIC('NOMISMK'))
 DEFAVALIDASI = CARIPUBLIC('CTKVALIDASI')
 DEFASMSGATEWAY = DEFADBFSMS
 DEFANOTIFIKASI = IIF(EMPTY(ALLTRIM(DEFASMSGATEWAY)),'0','1')
 DEFATABSTOR = CARIPUBLIC('TABSTOR')
 DEFATABAMB = CARIPUBLIC('TABAMB')
 DEFATABPBK = CARIPUBLIC('TABPBK')
 DEFATABBG = CARIPUBLIC('TABBG')
 DEFATABEDT = CARIPUBLIC('TABEDT')
 DEFATABSLD = CARIPUBLIC('TABSLD')
 DEFATABPJK = CARIPUBLIC('TABPJK')
 DEFATABADM = CARIPUBLIC('TABADM')
 DEFATABBGDEP = CARIPUBLIC('TABBGDEP')
 DEFADEPSTOR = CARIPUBLIC('DEPSTOR')
 DEFADEPBG = CARIPUBLIC('DEPBG')
 DEFADEPPJK = CARIPUBLIC('DEPPJK')
 DEFADEPAMBPK = CARIPUBLIC('DEPAMBPK')
 DEFADEPAMBBG = CARIPUBLIC('DEPAMBBG')
 DEFADEPPBKBG = CARIPUBLIC('DEPPBKBG')
 DEFADEPPBKPK1 = CARIPUBLIC('DEPPBKPK1')
 DEFADEPPBKPK2 = CARIPUBLIC('DEPPBKPK2')
 DEFAPINSTOR = CARIPUBLIC('PINSTOR')
 DEFAPINPBK = CARIPUBLIC('PINPBK')
 DEFAPINPOT = CARIPUBLIC('PINPOT')
 DEFAPINTRK = CARIPUBLIC('PINTRK')
 DEFAPINPBK = CARIPUBLIC('PINPBK2')
 DEFAPINJASA = CARIPUBLIC('PINJASA')
 DEFATGLBUNGASIMP = VAL(CARIPUBLIC('TGLBUNGASIMP'))
 DEFASYSTEMAKT = VAL(CARIPUBLIC('AKT_SYSTEM'))
 DEFAAKRUSIMPANAN = VAL(CARIPUBLIC('AKRU_SIMPANAN'))
 DEFAAKRUPINJAMAN = VAL(CARIPUBLIC('AKRU_PINJAMAN'))
 DEFAAKRUADM = VAL(CARIPUBLIC('AKRU_ADM'))
 DEFAAKRUBIAYA = VAL(CARIPUBLIC('AKRU_BIAYA'))
 defakiri1=CARIPUBLIC('LAP_KIRI1')
 defakiri2=CARIPUBLIC('LAP_KIRI2')
 defakiri3=CARIPUBLIC('LAP_KIRI3')
 defatengah1=CARIPUBLIC('LAP_TENGAH1')
 defatengah=CARIPUBLIC('LAP_TENGAH2')
 defatengah3=CARIPUBLIC('LAP_TENGAH3')
 defakanan1=CARIPUBLIC('LAP_KANAN1')
 defakanan2=CARIPUBLIC('LAP_KANAN2')
 defakanan3=CARIPUBLIC('LAP_KANAN3')
 
 DEFAUSERID = ''
 DEFAFMTANGG = IIF(LEN(DEFAFMTANGG) < 1,'!!!!!!',DEFAFMTANGG)
 DEFAFMTAKT = IIF(LEN(DEFAFMTAKT) < 1,'!!!!.!!!!',DEFAFMTAKT)
 
 USE 
 SELECT (OLDSELE)
 RETURN 
ENDPROC
*------
PROCEDURE caripublic
 LPARAMETER MDATA
 LOCATE FOR KET2 = MDATA
 IF FOUND()
    RETURN KETERANGAN
 ENDIF 
 RETURN ''
ENDPROC
*------
PROCEDURE cekjurnalpublic
 IF EMPTY(DEFANOPERKAS) .OR. EMPTY(DEFANOPERMATERAI) .OR. EMPTY(DEFANOPERNOTARIS) .OR.  ;
EMPTY(DEFANOPERPREMI) .OR. EMPTY(DEFANOPERTRANS) .OR. EMPTY(DEFANOPERSURVEI) .OR.  ;
EMPTY(DEFANOPERAKA) .OR. EMPTY(DEFANOPERAKP) .OR. EMPTY(DEFANOPERSIMPK) .OR.  ;
EMPTY(DEFANOPERSIMWJB) .OR. EMPTY(DEFANOPERSIMSMK) .OR.  ;
EMPTY(DEFANOPERPENYERT)
    DO FORM setting2
 ENDIF 
 CSQL = "select * from setsandi_pinj where kantor='" + DEFAKANTOR + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 IF RECCOUNT() = 0
    MKOSONG = .T.
 ELSE 
    MKOSONG = .F.
 ENDIF 
 GO TOP
 DO WHILE  .NOT. EOF()
    IF EMPTY(JURNAL_POKOK) .OR. EMPTY(JURNAL_JASA) .OR. EMPTY(JURNAL_DENDA) .OR.  ;
   EMPTY(JURNAL_ADM) .OR. EMPTY(JURNAL_PROV) .OR. EMPTY(JURNAL_YADIT) .OR.  ;
   EMPTY(JURNAL_PPAP)
       MKOSONG = .T.
       EXIT 
    ENDIF 
    SKIP 
 ENDDO 
 IF MKOSONG
     MESSAGEBOX('SETTING JURNAL KREDIT HARAP DILENGKAPI TERLEBIH DAHULU',0,'')
 ENDIF 
 USE 
 CSQL = "select * from setsandi_tab where kantor='" + DEFAKANTOR + "' "
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 IF RECCOUNT() = 0
    MKOSONG = .T.
 ELSE 
    MKOSONG = .F.
 ENDIF 
 GO TOP
 DO WHILE  .NOT. EOF()
    IF EMPTY(JURNALTAB) .OR. EMPTY(JURNALUTANGBG) .OR. EMPTY(JURNALBUNGA) .OR.  ;
   EMPTY(JURNALADM) .OR. EMPTY(JURNALADMTUTUP) .OR. EMPTY(JURNALPAJAK) .OR.  ;
   EMPTY(JURNALKSD)
       MKOSONG = .T.
       EXIT 
    ENDIF 
    SKIP 
 ENDDO 
 IF MKOSONG
     MESSAGEBOX('SETTING JURNAL SIMPANAN HARAP DILENGKAPI TERLEBIH DAHULU',0,'')
 ENDIF 
 USE 
ENDPROC
*------
PROCEDURE readini2
 PARAMETER PRMPARENTSECTION , PRMCHILDSECTION , PRMDEFAULTVALUE , PRMFILEINI
 DECLARE INTEGER GetPrivateProfileString IN Win32API AS GetPrivStr STRING , STRING ,  ;
      STRING , STRING @ , INTEGER , STRING 
 LOCAL FILEHANDLER , RETURNVALUE
 WINDINIPATH = 'C:\WINDOWS\' + PRMFILEINI
 IF FILE(WINDINIPATH)
    FILEHANDLER = FOPEN(WINDINIPATH,0)
    PRMFILEINILOC = 'C:\WINDOWS\' + PRMFILEINI
 ELSE 
    IF FILE(PRMFILEINI)
       FILEHANDLER = FOPEN(PRMFILEINI,0)
       PRMFILEINILOC = CURDIR() + PRMFILEINI
    ELSE 
       RETURNVALUE = PRMDEFAULTVALUE
       RETURN RETURNVALUE
    ENDIF 
 ENDIF 
 IF FILEHANDLER < 0
    WAIT WINDOW NOWAIT 'Gagal akses INI File.'
    = FCLOSE(FILEHANDLER)
    RETURNVALUE = PRMDEFAULTVALUE
    RETURN RETURNVALUE
 ELSE 
    = FCLOSE(FILEHANDLER)
 ENDIF 
 LOCAL LCBUFFER
 LCBUFFER = SPACE(500) + CHR(0)
 = GETPRIVSTR(PRMPARENTSECTION,PRMCHILDSECTION,PRMDEFAULTVALUE,@LCBUFFER,LEN(LCBUFFER),PRMFILEINILOC)
 LCBUFFER = ALLTRIM(STRTRAN(LCBUFFER,CHR(0),''))
 RETURN LCBUFFER
ENDPROC
*------
PROCEDURE id_hardisk
    LOCAL lcComputerName, loWMI, lowmiWin32Objects, lowmiWin32Object,HddID
	lcComputerName = GETWORDNUM(SYS(0),1)
	loWMI = GETOBJECT("WinMgmts://" + lcComputerName)
	lowmiWin32Objects = loWMI.InstancesOf('Win32_LogicalDisk')
	FOR EACH lowmiWin32Object IN lowmiWin32Objects
		WITH lowmiWin32Object
		** IF .Name="C:"    && untuk drive C
			? .Name
			? .VolumeSerialNumber
		** ENDIF
		ENDWITH
	ENDFOR
ENDPROC 
*------------------------- id matherboard
FUNCTION  id_matherboard
	LOCAL lcComputerName, loWMI, lowmiWin32Objects, lowmiWin32Object,BaseBoardID
	lcComputerName = GETWORDNUM(SYS(0),1)
	loWMI = GETOBJECT("WinMgmts://" + lcComputerName)
	lowmiWin32Objects = loWMI.InstancesOf("Win32_BaseBoard")
	FOR EACH lowmiWin32Object IN lowmiWin32Objects
		WITH lowmiWin32Object
			BaseBoardId=TRANSFORM(.SerialNumber)
		ENDWITH
	ENDFOR
	RETURN BaseBoardId
ENDFUNC 

*---------- mencari IP Address
FUNCTION GetIP

oWS = CREATEOBJECT("MSWinSock.Winsock")
lcLocalIP = oWS.LocalIP
oWS = ""
RETURN lcLocalIP
ENDPROC 

*------
PROCEDURE MacAdress
 LOCAL PGUID , RGUID , LNSIZE
 DECLARE INTEGER CoCreateGuid IN 'OLE32.dll' STRING @
 DECLARE INTEGER StringFromGUID2 IN 'OLE32.dll' STRING , STRING @ , INTEGER 
 PGUID = REPLICATE(CHR(0),16)
 RGUID = REPLICATE(CHR(0),80)
 IF '5.' $ OS()
    DECLARE INTEGER UuidCreateSequential IN 'RPCRT4.dll' STRING @
    RETURN SUBSTR(IIF(UUIDCREATESEQUENTIAL(@PGUID) = 0 .AND. STRINGFROMGUID2(PGUID,@RGUID,40) <> 0,STRCONV(LEFT(RGUID,76),6),''),26,12)
 ELSE 
    RETURN SUBSTR(IIF(COCREATEGUID(@PGUID) = 0 .AND. STRINGFROMGUID2(PGUID,@RGUID,40) <> 0,STRCONV(LEFT(RGUID,76),6),''),26,12)
 ENDIF 
ENDPROC
*------
PROCEDURE savelog
 CSQL =  ;
      'insert into mylog (userid,alamat) value ' + "('" + DEFAUSERID + "',inet_aton('" +  ;
GETIP() + "'))"
ENDPROC
*------
PROCEDURE errHandler
 PARAMETER MERROR , MESS , MESS1 , MPROG , MLINENO
 CLEAR 
 ? 'Error number: ' + LTRIM(STR(MERROR))
 ? 'Error message: ' + MESS
 ? 'Line of code with error: ' + MESS1
 ? 'Line number of error: ' + LTRIM(STR(MLINENO))
 ? 'Program with error: ' + MPROG
ENDPROC
*------
PROCEDURE script1
 PARAMETER P_KATA
 LOCAL L_HASIL , L_ACAK , L_INDEX , I
 L_ACAK = 'MULYONO RAFIANTO'
 L_HASIL = ''
 L_INDEX = 1
 FOR I = 1 TO LEN(ALLTRIM(P_KATA))
    L_HASIL = L_HASIL + CHR(ASC(SUBSTR(P_KATA,I,1)) + ASC(SUBSTR(L_ACAK,L_INDEX,1)))
    L_INDEX = L_INDEX + 1
    IF L_INDEX > LEN(L_ACAK)
       L_INDEX = 1
    ENDIF 
 ENDFOR 
 RETURN L_HASIL
ENDPROC
*------
PROCEDURE script2
 PARAMETER P_KATA
 IF EMPTY(P_KATA)
    RETURN ''
 ENDIF 
 LOCAL L_HASIL , L_ACAK , L_INDEX , I
 L_ACAK = 'MULYONO RAFIANTO'
 L_HASIL = ''
 L_INDEX = 1
 FOR I = 1 TO LEN(ALLTRIM(P_KATA))
    L_HASIL = L_HASIL + CHR(ASC(SUBSTR(P_KATA,I,1)) - ASC(SUBSTR(L_ACAK,L_INDEX,1)))
    L_INDEX = L_INDEX + 1
    IF L_INDEX > LEN(L_ACAK)
       L_INDEX = 1
    ENDIF 
 ENDFOR 
  MESSAGEBOX(L_HASIL)
 RETURN L_HASIL
ENDPROC
*------

PROCEDURE nobukti

*csql="select MAX(bukti) as bukti from col_bayar where tanggal='"+sqldate(thisform.tgl)+"' and kode='"+thisform.kol+"'"
csql="select MAX(SUBSTR(bukti,4,7)) as bukti from kasir where kantor='"+defakantor+"'"
lcek=SQLEXEC(oODBC,csql,"smt")
IF lcek < 0
   kett='gagal >> '
   ELSE
   kett ='berhasil >> '
ENDIF
*!*	MESSAGEBOX(kett+csql)
*!*	MESSAGEBOX('bukti  : '+bukti)
*!*	MESSAGEBOX(ISNULL(bukti))
*!*	BROWSE


IF RECCOUNT()=0 OR ISNULL(bukti)
   mbukti=ALLTRIM(thisform.kol)+".0000001"
ELSE 
   mangka=SUBSTR(bukti,1,7)
  
   mangka=VAL(mAngka)+1
  
   mhrf=RIGHT('000000'+ALLTRIM(STR(mAngka)),7)
   mbukti=SUBSTR(defakantor,3,2)+"."+mhrf

ENDIF    

RETURN mbukti



PROCEDURE urutbukti
 PARAMETER MKAS
 OLDSELECT = SELECT()
 MIP = MYIPADDRESS()
 
	
	 
 IF MKAS = 'NONKAS'
    CSQL =  ;
         "select nomorbukti from urutnota where komputer='" + MIP +  ;
   "' and kas='NONKAS' and statusnomor='1'"
    LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
    IF  .NOT. ISNULL(NOMORBUKTI) AND  .NOT. EMPTY(NOMORBUKTI)
       RETURN NOMORBUKTI
    ENDIF 
    CSQL =  ;
         "select MIN(nomorbukti) as nomorbukti from urutnota where kas='NONKAS' and statusnomor='3'"
    LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
    IF ISNULL(NOMORBUKTI) .OR. EMPTY(NOMORBUKTI)
       CSQL = "select MAX(nomorbukti) as nomorbukti from urutnota where kas='NONKAS'"
       LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
       MBUKTI = IIF(ISNULL(NOMORBUKTI),'00000000',NOMORBUKTI)
       MBUKTI = NOTABARU(MBUKTI)
       CSQL =  ;
            "insert into urutnota (kantor,komputer,nomorbukti,kas,statusnomor) value (?defakantor,?mip,?mbukti,'NONKAS','1')"
       LCEK = SQLEXEC(OODBC,CSQL)
    ELSE 
       MBUKTI = NOMORBUKTI
       CSQL =  ;
            "update urutnota set statusnomor='1', komputer=?mip where nomorbukti='" + MBUKTI +  ;
      "' and kas='NONKAS'"
       LCEK = SQLEXEC(OODBC,CSQL)
    ENDIF 
 ELSE 
    use
    CSQL = "select *  from urutnota "
  **  CSQL = "select nomorbukti  from urutnota where kantor = '" + defakantor +  "' and kas = 'KAS' "
    LCEK = SQLEXEC(OODBC,CSQL,'nmrnota')
    IF lcek > 1
        ket = 'oke  '
       ELSE
        ket = ' gagal  '
    ENDIF
    
*!*	    MESSAGEBOX(ket)
*!*	    MESSAGEBOX(csql)
    
*!*	      brow
    IF  .NOT. ISNULL(NOmorBUKTI) AND  .NOT. EMPTY(NOmorBUKTI)
       RETURN NOMORBUKTI
    ENDIF 
*!*	    CSQL =  ;
*!*	         "select MIN(nomorbukti) as nomorbukti from urutnota where kas='KAS' and statusnomor='3'"
*!*	    LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
*!*	*!*	     MESSAGEBOX('2 '+csql)
*!*	    brow
    IF ISNULL(NOMORBUKTI) .OR. EMPTY(NOMORBUKTI)
       CSQL = "select MAX(nomorbukti) as nomorbukti from urutnota where kas='KAS'"
       LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
       MBUKTI = IIF(ISNULL(NOMORBUKTI),'00000000',NOMORBUKTI)
       MBUKTI = NOTABARU(MBUKTI)
       CSQL =  ;
            'insert into urutnota (kantor,komputer,nomorbukti,kas,statusnomor) value ' +  ;
      "(?defakantor,'" + MIP + "',?mbukti,'KAS','1')"
       LCEK = SQLEXEC(OODBC,CSQL)
    ELSE 
       MBUKTI = NOMORBUKTI
       CSQL =  ;
            "update urutnota set statusnomor='1', komputer='" + MIP + "' where nomorbukti='" +  ;
      MBUKTI + "' and kas='KAS'"
       LCEK = SQLEXEC(OODBC,CSQL)
    ENDIF 
 ENDIF 
 SELECT (OLDSELECT)
 RETURN MBUKTI
ENDPROC

*------
PROCEDURE notabaru
 PARAMETER MBUKTI 
 xkantor = substr(ALLTRIM(defakantor),3,2)
 MANGKA = ALLTRIM(STR(VAL(SUBSTR(MBUKTI,3,8))))
*!*	 MESSAGEBOX(xkantor)
*!*	 MESSAGEBOX(mangka)
 IF MANGKA = '0'
    MBUKTI = xkantor+'00000001'
 ELSE 
    MKE = AT(MANGKA,MBUKTI) + LEN(MANGKA)
    AKHIRAN = ALLTRIM(SUBSTR(MBUKTI,MKE))
    MBUKTI1 = '0000000000' + ALLTRIM(STR(VAL(MANGKA) + 1)) + AKHIRAN
    MBUKTI = xkantor+RIGHT(MBUKTI1,8)
 ENDIF 
 RETURN MBUKTI
ENDPROC
*------
PROCEDURE updatenota
 PARAMETER MSTATUS , MKAS , MBUKTI
 MIP = MYIPADDRESS()
 IF MSTATUS = '2'
    CSQL = "SELECT * FROM urutnota WHERE statusnomor='0' and kas='KAS'"
    LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
    IF RECCOUNT() = 0
       CSQL =  ;
            'insert into urutnota (kantor,komputer,nomorbukti,kas,statusnomor) ' + "value ('" +  ;
      DEFAKANTOR + "','0.0.0.0','0','KAS','0')"
       LCEK = SQLEXEC(OODBC,CSQL)
    ENDIF 
    CSQL = "SELECT * FROM urutnota WHERE statusnomor='0' and kas='NONKAS'"
    LCEK = SQLEXEC(OODBC,CSQL,'nomornota')
    IF RECCOUNT() = 0
       CSQL =  ;
            'insert into urutnota (kantor,komputer,nomorbukti,kas,statusnomor) ' + "value ('" +  ;
      DEFAKANTOR + "','0.0.0.0','0','NONKAS','0')"
       LCEK = SQLEXEC(OODBC,CSQL)
    ENDIF 
    CSQL =  ;
         "update urutnota set nomorbukti='" + MBUKTI + "' where kas='" + MKAS +  ;
   "' and statusnomor='0'"
    LCEK = SQLEXEC(OODBC,CSQL)
    CSQL =  ;
         "delete from urutnota where kas='" + MKAS +  ;
   "' and statusnomor='1' and komputer=?mip"
    LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 IF MSTATUS = '3'
    CSQL =  ;
         "update urutnota set statusnomor='3' where kas='" + MKAS +  ;
   "' and statusnomor='1' and komputer=?mIp"
    LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 RETURN 
ENDPROC
*------
PROCEDURE cekurutnota
 PARAMETER MKAS , MTANGGAL , MBUKTI
 CSQL =  ;
      "select bukti from kasir where tanggal='" + SQLDATE(MTANGGAL) + "' and bukti='" +  ;
MBUKTI + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'ceknota')
 IF ALLTRIM(BUKTI) = ALLTRIM(MBUKTI)
     UPDATENOTA('2',MKAS,MBUKTI)
 ELSE 
     UPDATENOTA('3',MKAS,MBUKTI)
 ENDIF 
ENDPROC
*------
PROCEDURE MyGetDiskVolume
 LPARAMETER CDRIVE
 DECLARE GetVolumeInformation IN win32api STRING , STRING @ , INTEGER , INTEGER @ ,  ;
      INTEGER @ , INTEGER @ , STRING @ , INTEGER 
 LOCAL CVOLSERIALNUMBER
 IF EMPTY(CDRIVE)
    CDRIVE = SYS(5) + '\'
 ENDIF 
 M.ROOTPATH = CDRIVE
 M.VOLNAME = SPACE(255)
 M.VOLNAMELEN = LEN(M.VOLNAME)
 M.VOLUMESERIALNUMBER = 0
 M.MAXFILENAMELEN = 0
 M.FILESYSTEMFLAGS = 0
 M.FILESYSTEMNAME = SPACE(255)
 M.FSNAMELEN = LEN(M.FILESYSTEMNAME)
 = GETVOLUMEINFORMATION(M.ROOTPATH,M.VOLNAME,M.VOLNAMELEN,M.VOLUMESERIALNUMBER,M.MAXFILENAMELEN,M.FILESYSTEMFLAGS,M.FILESYSTEMNAME,M.FSNAMELEN)
 M.VOLNAME = LEFT(M.VOLNAME,AT(CHR(0),M.VOLNAME) - 1)
 CVOLSERIALNUMBER = M.VOLNAME + ';' + LTRIM(STR(M.VOLUMESERIALNUMBER))
 RETURN CVOLSERIALNUMBER
ENDPROC
*------
PROCEDURE userwindows
 DECLARE INTEGER GetUserName IN advapi32 STRING @ , INTEGER @
 NSIZE = 250
 CBUFFER = REPLICATE(CHR(0),NSIZE)
 = GETUSERNAME(@CBUFFER,@NSIZE)
 CBUFFER = STRTRAN(CBUFFER,CHR(0),'')
 RETURN CBUFFER
ENDPROC
*------
PROCEDURE pembulatan
 LPARAMETER ANGKA , BLT
 LOCAL DGT , ANGKA1 , ANGKA2 , HSL
 ANGKA = ROUND(ANGKA,0)
 IF BLT <= 1
    RETURN ANGKA
 ENDIF 
 DGT = ALLTRIM(STR(BLT))
 DGT = LEN(DGT)
 ANGKA1 = ALLTRIM(STR(ANGKA))
 ANGKA1 = LEFT(ANGKA1,LEN(ANGKA1) - DGT) + REPLICATE('0',DGT)
 ANGKA1 = VAL(ANGKA1)
 ANGKA2 = ALLTRIM(STR(ANGKA))
 ANGKA2 = RIGHT(ANGKA2,DGT)
 ANGKA2 = VAL(ANGKA2)
 HSL = ANGKA2 / BLT
 HSL = INT(HSL) + IIF(HSL = INT(HSL),0,1)
 ANGKA2 = HSL * BLT
 ANGKAHSL = ANGKA1 + ANGKA2
 RETURN ANGKAHSL
ENDPROC
*------
PROCEDURE TERBILANG
 LPARAMETER XJML
 DIMENSION ANGKA0( 4 ) , ANGKA( 9 ) , ARRANGK( 12 )
 ANGKA0( 1 ) = ''
 ANGKA0( 2 ) = ' Ribu'
 ANGKA0( 3 ) = ' Juta'
 ANGKA0( 4 ) = ' Milyar'
 ANGKA( 1 ) = ' Satu'
 ANGKA( 2 ) = ' Dua'
 ANGKA( 3 ) = ' Tiga'
 ANGKA( 4 ) = ' Empat'
 ANGKA( 5 ) = ' Lima'
 ANGKA( 6 ) = ' Enam'
 ANGKA( 7 ) = ' Tujuh'
 ANGKA( 8 ) = ' Delapan'
 ANGKA( 9 ) = ' Sembilan'
 CHRJML = ALLTRIM(STR(XJML))
 POSDES = RAT('.',CHRJML)
 ANGKADES = ''
 IF POSDES > 0
    ANGKADES = SUBSTR(CHRJML,POSDES + 1)
    ANGKADES = ' ' + ALLTRIM(STR(VAL(ANGKADES)))
    CHRJML = SUBSTR(CHRJML,1,POSDES - 1)
 ENDIF 
 LCHRJML = LEN(CHRJML)
 IF (LCHRJML == 1)
    DNGHRF = IIF(CHRJML = '0','',ANGKA(VAL(CHRJML)))
 ELSE 
    ARRANGK( 1 ) = ' '
    ARRANGK( 2 ) = ' '
    ARRANGK( 3 ) = ' '
    ARRANGK( 4 ) = ' '
    ARRANGK( 5 ) = ' '
    ARRANGK( 6 ) = ' '
    ARRANGK( 7 ) = ' '
    ARRANGK( 8 ) = ' '
    ARRANGK( 9 ) = ' '
    ARRANGK( 10 ) = ' '
    ARRANGK( 11 ) = ' '
    ARRANGK( 12 ) = ' '
    ANGKAKE = 0
    FOR K = 1 TO LCHRJML
       ARRANGK( K ) = SUBSTR(CHRJML,LCHRJML - ANGKAKE,1)
       ANGKAKE = ANGKAKE + 1
    ENDFOR 
    ANGKAKE = 0
    DNGHRF = ''
    FOR K = 1 TO LCHRJML
       CHRANGKA = SUBSTR(CHRJML,LCHRJML - ANGKAKE,1)
       IF (MOD(K,3) = 1)
          DO CASE 
          CASE ARRANGK(K + 1) = '1'
          CASE CHRANGKA = '1' AND K = 4 AND LCHRJML = 4
             DNGHRF = ' Se' + LTRIM(ANGKA0(INT(K / 3) + 1)) + DNGHRF
          CASE CHRANGKA = '1' AND LCHRJML > 6 AND ARRANGK(K + 1) + ARRANGK(K + 2) = '00' AND K = 4
             DNGHRF = ' Se' + LTRIM(ANGKA0(INT(K / 3) + 1)) + DNGHRF
          CASE CHRANGKA > '0' AND ARRANGK(K + 1) <> '1' AND LCHRJML > K
             DNGHRF = ANGKA(VAL(CHRANGKA)) + ANGKA0(INT(K / 3) + 1) + DNGHRF
          CASE CHRANGKA > '0'
             DNGHRF = ANGKA(VAL(CHRANGKA)) + ANGKA0(INT(K / 3) + 1) + DNGHRF
          ENDCASE 
       ELSE 
          IF (MOD(K,3) = 2)
             DO CASE 
             CASE CHRANGKA = '0'
             CASE CHRANGKA = '1' AND ARRANGK(K - 1) = '1'
                DNGHRF = ' Sebelas' + ANGKA0(INT(K / 3) + 1) + DNGHRF
             CASE CHRANGKA = '1' AND ARRANGK(K - 1) = '0'
                DNGHRF = ' Sepuluh' + ANGKA0(INT(K / 3) + 1) + DNGHRF
             CASE CHRANGKA = '1' AND ARRANGK(K - 1) > '0'
                DNGHRF = ANGKA(VAL(ARRANGK(K - 1))) + ' Belas' + ANGKA0(INT(K / 3) + 1) + DNGHRF
             CASE CHRANGKA > '1' AND ARRANGK(K - 1) = '0'
                DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Puluh' + ANGKA0(INT(K / 3) + 1) + DNGHRF
             CASE CHRANGKA > '1' AND ARRANGK(K - 1) > '0'
                DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Puluh' + DNGHRF
             ENDCASE 
          ELSE 
             IF (MOD(K,3) = 0)
                DO CASE 
                CASE CHRANGKA = '0'
                CASE CHRANGKA = '1' AND ARRANGK(K - 1) <> '0'
                   DNGHRF = ' Seratus' + DNGHRF
                CASE CHRANGKA = '1' AND ARRANGK(K - 1) + ARRANGK(K - 2) = '00' AND K > 3
                   DNGHRF = ' Seratus' + ANGKA0(INT(K / 3)) + DNGHRF
                CASE CHRANGKA = '1'
                   DNGHRF = ' Seratus' + DNGHRF
                CASE CHRANGKA > '1' AND ARRANGK(K - 1) <> '0'
                   DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Ratus' + DNGHRF
                CASE CHRANGKA > '1' AND ARRANGK(K - 1) + ARRANGK(K - 2) = '00' AND K > 3
                   DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Ratus' + ANGKA0(INT(K / 3)) + DNGHRF
                CASE CHRANGKA > '1' AND ARRANGK(K - 1) = '0' AND K > 3
                   DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Ratus' + DNGHRF
                CASE CHRANGKA > '1' AND K = 3
                   DNGHRF = ANGKA(VAL(CHRANGKA)) + ' Ratus' + DNGHRF
                ENDCASE 
             ENDIF 
          ENDIF 
       ENDIF 
       ANGKAKE = ANGKAKE + 1
    ENDFOR 
 ENDIF 
 IF (VAL(CHRJML) = 0 AND VAL(ANGKADES) = 0)
    DNGHRF = ''
 ELSE 
    IF (VAL(CHRJML) <> 0 AND VAL(ANGKADES) = 0)
    ELSE 
       IF (VAL(CHRJML) = 0 AND VAL(ANGKADES) <> 0)
       ELSE 
          ANGKADES = ALLTRIM(ANGKADES)
          DO WHILE .T.
             IF RIGHT(ANGKADES,1) <> '0'
                EXIT 
             ENDIF 
             ANGKADES = LEFT(ANGKADES,LEN(ANGKADES) - 1)
          ENDDO 
          ANGKADES = VAL(ANGKADES)
          DNGHRF = DNGHRF + ' Koma ' + TERBILANG(ANGKADES)
       ENDIF 
    ENDIF 
 ENDIF 
 RETURN DNGHRF
ENDPROC
*------
PROCEDURE harikerja
 PARAMETER XTGL
 LOCAL VTGL , JHARI , JHR
 VTGL = AWALBLN(XTGL)
 JHARI = 0
 JHR = 0
 DO WHILE .T.
    IF VTGL > AKHIRBLN(XTGL)
       EXIT 
    ENDIF 
    JHR = JHR + 1
    IF  .NOT. (NAMAHARI(VTGL) = 'SABTU' .OR. NAMAHARI(VTGL) = 'MINGGU')
       JHARI = JHARI + 1
    ENDIF 
    VTGL = VTGL + 1
 ENDDO 
 RETURN JHR
ENDPROC
*------
PROCEDURE hrdalambln
 PARAMETER MTGL
 RETURN AKHIRBLN(MTGL) - (AWALBLN(MTGL) - 1)
ENDPROC
*------
PROCEDURE awalbln
 PARAMETER MTGL
 LOCAL XTGLAWAL
 XTGLAWAL = CTOD('01-' + STR(MONTH(MTGL),2) + '-' + STR(YEAR(MTGL),4))
 RETURN XTGLAWAL
ENDPROC
*------
PROCEDURE awalthn
 	PARAMETER MTGL
 	LOCAL XTGLAWAL
 	XTGLAWAL = CTOD('01-01-' + STR(YEAR(MTGL),4))
 	RETURN XTGLAWAL
ENDPROC

*------
PROCEDURE akhirbln
 PARAMETER MTGL
 LOCAL XTGLAKHIR
 SET CENTURY ON
 XTGLAKHIR = CTOD('26-' + STR(MONTH(MTGL),2) + '-' + STR(YEAR(MTGL),4))
 A = 1
 DO WHILE .T.
    A = A + 1
    IF A > 50
       EXIT 
    ENDIF 
    IF MONTH(XTGLAKHIR) <> MONTH(XTGLAKHIR + 1)
       EXIT 
    ENDIF 
    XTGLAKHIR = XTGLAKHIR + 1
 ENDDO 
 RETURN XTGLAKHIR
ENDPROC
*------
PROCEDURE maju1bln
 PARAMETER MTGL , MTGL1
 LOCAL XTGL , XTGLASAL
 MTGL1 = IIF(EMPTY(MTGL1),MTGL,MTGL1)
 XTGL = MTGL + 27
 DO WHILE .T.
    IF MONTH(XTGL) <> MONTH(MTGL)
       EXIT 
    ENDIF 
    XTGL = XTGL + 1
 ENDDO 
 XTGLASAL = XTGL
 DO WHILE .T.
    IF DAY(XTGL) = DAY(MTGL1) .OR. (MONTH(XTGL) <> MONTH(XTGLASAL))
       EXIT 
    ENDIF 
    XTGL = XTGL + 1
 ENDDO 
 IF MONTH(XTGL) <> MONTH(XTGLASAL)
    XTGL = XTGL - 1
 ENDIF 
 RETURN XTGL
ENDPROC
*------
PROCEDURE majubulan
 PARAMETER MTGL , MKALI , MTGLASAL
 FOR I = 1 TO MKALI
     MAJU1BLN(MTGL,MTGLASAL)
 ENDFOR 
 RETURN 
ENDPROC
*------
PROCEDURE mundur1bln
 PARAMETER MTGL
 LOCAL XTGL
 XTGL = MTGL - 27
 DO WHILE DAY(XTGL) > DAY(MTGL)
    XTGL = XTGL - 1
 ENDDO 
 RETURN XTGL
ENDPROC
*------
PROCEDURE NAMAHARI
 LPARAMETER VTGL
 LOCAL HARI , NMHARI
 HARI = DOW(VTGL)
 DO CASE 
 CASE HARI = 1
    NMHARI = 'MINGGU'
 CASE HARI = 2
    NMHARI = 'SENIN'
 CASE HARI = 3
    NMHARI = 'SELASA'
 CASE HARI = 4
    NMHARI = 'RABU'
 CASE HARI = 5
    NMHARI = 'KAMIS'
 CASE HARI = 6
    NMHARI = 'JUMAT'
 CASE HARI = 7
    NMHARI = 'SABTU'
 ENDCASE 
 RETURN NMHARI
ENDPROC
*------
PROCEDURE namabulan
 LPARAMETER BLN
 LOCAL MBLN
 MBLN = IIF(VARTYPE(BLN) = 'D',MONTH(BLN),IIF(VARTYPE(BLN) = 'C',1,BLN))
 DO CASE 
 CASE MBLN = 1
    NAMABULAN = 'Januari'
 CASE MBLN = 2
    NAMABULAN = 'Februari'
 CASE MBLN = 3
    NAMABULAN = 'Maret'
 CASE MBLN = 4
    NAMABULAN = 'April'
 CASE MBLN = 5
    NAMABULAN = 'Mei'
 CASE MBLN = 6
    NAMABULAN = 'Juni'
 CASE MBLN = 7
    NAMABULAN = 'Juli'
 CASE MBLN = 8
    NAMABULAN = 'Agustus'
 CASE MBLN = 9
    NAMABULAN = 'September'
 CASE MBLN = 10
    NAMABULAN = 'Oktober'
 CASE MBLN = 11
    NAMABULAN = 'Nopember'
 CASE MBLN = 12
    NAMABULAN = 'Desember'
 OTHERWISE 
    NAMABULAN = ' '
 ENDCASE 
 RETURN NAMABULAN
ENDPROC
*------
PROCEDURE UraiTgl
 PARAMETER VTGL
 RETURN STR(DAY(VTGL),2) + ' ' + NAMABULAN(VTGL) + ' ' + STR(YEAR(VTGL),4)
ENDPROC
*------
PROCEDURE haritgl
 LPARAMETER VTGL
 RETURN NAMAHARI(VTGL) + ', ' + URAITGL(VTGL)
ENDPROC
*------
PROCEDURE jmlhari
 LPARAMETER XXTGL1 , XXTGL2
 LOCAL BLN
 DIMENSION HARIBLN( 2 )
 BLN = 0
 IF XXTGL1 < XXTGL2 .OR. EMPTY(XXTGL1) .OR. EMPTY(XXTGL2)
    HARIBLN( 1 ) = 0
    HARIBLN( 2 ) = 0
    RETURN HARIBLN
 ENDIF 
 MTGL2 = XXTGL2
 DO WHILE .T.
    IF MAJU1BLN(MTGL2) > XXTGL1
       EXIT 
    ENDIF 
    BLN = BLN + 1
    MTGL2 = MAJU1BLN(MTGL2)
 ENDDO 
 HARIBLN( 1 ) = BLN
 HARIBLN( 2 ) = XXTGL1 - MTGL2
 RETURN HARIBLN
ENDPROC
*------
PROCEDURE hitjt
 PARAMETER MPERIODE , MLAMA , MTGLAWAL
 LOCAL I , MTGLASAL
 MTGLASAL = MTGLAWAL
 MTGJT = MTGLAWAL
 DO CASE 
 CASE MPERIODE = 'HARIAN'
    FOR I = 1 TO MLAMA - 1
       MTGJT = MTGJT + 1
    ENDFOR 
 CASE MPERIODE = 'MINGGUAN'
    FOR I = 1 TO MLAMA - 1
       MTGJT = MTGJT + 7
    ENDFOR 
 CASE MPERIODE = 'PASARAN'
    FOR I = 1 TO MLAMA - 1
       MTGJT = MTGJT + 5
    ENDFOR 
 OTHERWISE 
    FOR I = 1 TO MLAMA - 1
       MTGJT = MAJU1BLN(MTGJT,MTGLASAL)
    ENDFOR 
 ENDCASE 
 MTGLJTEMPO = MTGJT
 RETURN MTGLJTEMPO
ENDPROC
*------
PROCEDURE sqldate
 LPARAMETER MTGL
 LOCAL MTGL1 , MTGL2 , MTGL3 , MTGL4
 IF (VARTYPE(MTGL) = 'D' .OR. VARTYPE(MTGL) = 'T') AND  .NOT. EMPTY(MTGL) AND  ;
 .NOT. ISNULL(MTGL)
    MTGL1 = TRANSFORM(YEAR(MTGL),'9999')
    MTGL2 = ALLTRIM(TRANSFORM(MONTH(MTGL),'99'))
    MTGL3 = ALLTRIM(TRANSFORM(DAY(MTGL),'99'))
    MTGL4 =  ;
         RIGHT('0000' + MTGL1,4) + '-' + RIGHT('00' + MTGL2,2) + '-' + RIGHT('00' + MTGL3,2)
 ELSE 
    MTGL4 = '0000-00-00'
 ENDIF 
 RETURN MTGL4
ENDPROC
*------
PROCEDURE sqldatetime
 LPARAMETER MTGL , MJAM
 LOCAL MTGL1 , MTGL2 , MTGL3 , MTGL4
 IF VARTYPE(MTGL) = 'D' AND  .NOT. EMPTY(MTGL) AND  .NOT. ISNULL(MTGL)
    MTGL1 = TRANSFORM(YEAR(MTGL),'9999')
    MTGL2 = ALLTRIM(TRANSFORM(MONTH(MTGL),'99'))
    MTGL3 = ALLTRIM(TRANSFORM(DAY(MTGL),'99'))
    MTGL4 =  ;
         RIGHT('0000' + MTGL1,4) + '-' + RIGHT('00' + MTGL2,2) + '-' + RIGHT('00' + MTGL3,2)
 ELSE 
    MTGL4 = '0000-00-00'
 ENDIF 
 IF VARTYPE(MJAM) = 'X' .OR. VARTYPE(MJAM) = 'L'
    MJAM = TIME()
 ENDIF 
 MTGL4 = MTGL4 + ' ' + MJAM
 RETURN MTGL4
ENDPROC
*------
PROCEDURE sql2date
 LPARAMETER MTGL
 LOCAL MTGL1 , MTGL2 , MTGL3 , MTGL4
 MTGL1 = LEFT(MTGL,4)
 MTGL2 = SUBSTR(MTGL,6,2)
 MTGL3 = SUBSTR(MTGL,9,2)
 RETURN CTOD(MTGL1 + '-' + MTGL2 + '-' + MTGL3)
ENDPROC
*------
PROCEDURE Flat2eff
 LPARAMETER MRATE , MLAMA , MADV
 LOCAL LOCAL1 , LOCAL2 , LOCAL3 , LOCAL4 , LOCAL5 , LOCAL6 , LOCAL7
 STORE 0 TO local1,local2,local3,local4,local5,local6,local7
 IF (MRATE <> 0)
    F_ADV1 = IIF(MADV = 'Y',1,0)
    IF (F_ADV1 == 1)
       LOCAL5 = 10000000
       LOCAL6 = MRATE / 100 * LOCAL5 / 12 * MLAMA
       LOCAL7 = (LOCAL5 + LOCAL6) / MLAMA
       MRATE = LOCAL6 / (LOCAL5 - LOCAL7) / (MLAMA - 1) * 1200
    ENDIF 
    MRATE = MRATE / 1200
    LOCAL1 = MRATE + 1 / (MLAMA - F_ADV1)
    LOCAL2 = MRATE + 0.01
    LOCAL3 = 1E-9
    F_EFEK = 0
    DO WHILE (ABS(F_EFEK - LOCAL2) > LOCAL3 AND MRATE <> 0)
       IF (F_EFEK <> 0)
          LOCAL2 = F_EFEK
       ENDIF 
       LOCAL4 = (LOCAL2 + 1) ** (MLAMA - F_ADV1)
       F_EFEK = LOCAL1 * (LOCAL4 - 1) / LOCAL4
    ENDDO 
 ELSE 
    F_EFEK = 0
 ENDIF 
 RETURN F_EFEK * 1200
ENDPROC
*------
PROCEDURE Eff2Flat
 LPARAMETER XEFF , LAMA
 FLAT =  ;
      (((1 * XEFF / 1200 * (1 + XEFF / 1200) ** LAMA) / (((1 + XEFF / 1200) ** LAMA) - 1) *  ;
LAMA) - 1) / 1 * 100 / (LAMA / 12)
 RETURN FLAT
ENDPROC
*------
PROCEDURE _passprm
 PARAMETER _LONMCLASS , _LCMD
 LOCAL _CNTCLASS
 FOR _CNTCLASS = 1 TO _SCREEN.FORMCOUNT
    IF _SCREEN.FORMS(_CNTCLASS).BASECLASS = 'Form' AND  ;
   UPPER(_SCREEN.FORMS(_CNTCLASS).NAME) == UPPER(_LONMCLASS)
        _SCREEN.FORMS[_cntclass].&_lcmd.
       EXIT 
    ENDIF 
 ENDFOR 
ENDPROC
*------
PROCEDURE _openfile
 PARAMETER _LPNMFILE
 DECLARE INTEGER ShellExecute IN shell32.DLL INTEGER , STRING , STRING , STRING , STRING ,  ;
      INTEGER 
 CACTION = 'open'
  SHELLEXECUTE(0,CACTION,_LPNMFILE,'','',1)
ENDPROC
*------
PROCEDURE ROUNDUP
 LPARAMETER NANGKA
 RETURN CEILING(NANGKA / 10) * 10
ENDPROC
*------
PROCEDURE duit
 PARAMETER ARTO
 PUBLIC DUITEN
 X_STR = INT(ARTO)
 T_STR = ALLTRIM(STR(INT(X_STR)))
 Y_STR = TRANSFORM(ARTO,'#########.##')
 IF T_STR = '0'
    DUITEN = '-'
    RETURN (DUITEN)
 ENDIF 
 KALIMAT = ''
 DIMENSION SEP( 5 )
 SEP( 1 ) = ''
 SEP( 2 ) = ' Ribu'
 SEP( 3 ) = ' Juta'
 SEP( 4 ) = ' Miliyard'
 SEP( 5 ) = ' Triliyun'
 NIL0 = ' Puluh'
 NIL = ' '
 NIL1 = ' Satu'
 NIL2 = ' Dua'
 NIL3 = ' Tiga'
 NIL4 = ' Empat'
 NIL5 = ' Lima'
 NIL6 = ' Enam'
 NIL7 = ' Tujuh'
 NIL8 = ' Delapan'
 NIL9 = ' Sembilan'
 Z = RIGHT(Y_STR,2)
 Z1 = IIF(SUBSTR(Z,1,1) = '0',' ',SUBSTR(Z,1,1))
 Z2 = SUBSTR(Z,2,1)
 IF VAL(Z) > 0
     z3=' Koma'+nil&z1+nil&z2
 ELSE 
    Z3 = ''
 ENDIF 
 NIL0 = ''
 T_BAGI_3 = INT(LEN(T_STR) / 3)
 IF T_BAGI_3 <> 0
    IF MOD(LEN(T_STR),3) = 0
       T_NIL_SEP = T_BAGI_3
    ELSE 
       T_NIL_SEP = T_BAGI_3 + 1
       T_STR = STUFF(T_STR,1,0,REPLICATE('0',3 - (MOD(LEN(T_STR),3))))
    ENDIF 
 ELSE 
    T_STR = STUFF(T_STR,1,0,REPLICATE('0',3 - (MOD(LEN(T_STR),3))))
    T_NIL_SEP = 1
 ENDIF 
 T_COUNTER = 1
 T_BACA = 1
 T_BACA_TEMP = SPACE(3)
 DO WHILE T_NIL_SEP >= 1
    T_BACA_TEMP = SUBSTR(T_STR,T_BACA,3)
    COU = 1
    DO WHILE COU <= 3
       XCOU = LTRIM(STR(COU))
        baca&xcou=SUBS(t_baca_temp,cou,1)
       COU = COU + 1
    ENDDO 
    DO CASE 
    CASE BACA1 = '0'
        kalimat=kalimat+nil&baca1
    CASE BACA1 = '1'
       KALIMAT = KALIMAT + ' Seratus'
    CASE BACA1 <> '1' AND BACA1 <> '0'
        kalimat=kalimat+nil&baca1+' Ratus'
    ENDCASE 
    DO CASE 
    CASE BACA2 = '1' AND BACA3 = '0'
       KALIMAT = KALIMAT + ' Sepuluh'
    CASE BACA2 = '1' AND BACA3 = '1'
       KALIMAT = KALIMAT + ' Sebelas'
    CASE BACA2 = '1' AND BACA3 > '1'
        kalimat=kalimat+nil&baca3+' Belas'
    CASE BACA2 > '1' AND BACA3 = '0'
        kalimat=kalimat+nil&baca2+' Puluh'
    CASE BACA2 > '1' AND BACA3 > '0'
        kalimat=kalimat+nil&baca2+' Puluh'+nil&baca3
    CASE BACA2 = '0'
       IF T_NIL_SEP = 2 AND BACA3 = '1'
          IF BACA1 <> '0'
             KALIMAT = KALIMAT + ' Satu Ribu'
          ELSE 
             KALIMAT = KALIMAT + ' Seribu'
          ENDIF 
          T_NIL_SEP = T_NIL_SEP - 1
          T_BACA = T_BACA + 3
          LOOP 
       ELSE 
           kalimat=kalimat+nil&baca3
       ENDIF 
    ENDCASE 
    IF T_BAGI_3 = 0
       EXIT 
    ENDIF 
    IF T_BACA_TEMP <> '000'
       KALIMAT = KALIMAT + SEP(T_NIL_SEP)
    ENDIF 
    T_NIL_SEP = T_NIL_SEP - 1
    T_BACA = T_BACA + 3
 ENDDO 
 DUITEN = ALLTRIM(KALIMAT) + Z3 + ' Rupiah'
 RETURN (DUITEN)
ENDPROC
*------
PROCEDURE RepWind
 LPARAMETER NMREPFORM , CAPREPFORM , FRMTARGET , FRMTIPE
 LOCAL REPFORM AS FORM
 REPFORM = CREATEOBJECT('Form')
 WITH REPFORM  
 .CAPTION = CAPREPFORM
 .NAME = NMREPFORM
 .WIDTH = SYSMETRIC(1) - 15
 .HEIGHT = SYSMETRIC(2) - 50
 .AUTOCENTER = .T.
 .MAXBUTTON = .F.
 .ALWAYSONTOP = .T.
 .HALFHEIGHTCAPTION = .T.
 ENDWITH 
 DO CASE 
 CASE FRMTIPE = 1
     REPORT FORM &frmtarget. TO PRINTER PROMPT
 CASE FRMTIPE = 2
     REPORT FORM &frmtarget. TO PRINTER PROMPT PREVIEW WINDOW &nmRepForm. 
 CASE FRMTIPE = 3
     REPORT FORM &frmtarget. PREVIEW WINDOW &nmRepForm. NOWAIT
 CASE FRMTIPE = 4
     REPORT FORM &frmtarget. PREVIEW WINDOW &nmRepForm. 
 ENDCASE 
 RELEASE REPFORM
 RETURN 
ENDPROC
*------
PROCEDURE alamatIP
 IPCOMP = CREATEOBJECT('MSWinsock.Winsock.1')
 RETURN IPCOMP.LOCALIP
ENDPROC
*------
PROCEDURE chk_err
 _OK = .F.
 RETURN 
ENDPROC
*------
PROCEDURE wait_nowait
 PARAMETER WAIT_TEXT
 WAIT WINDOW AT SROWS() / 2.7 , SCOLS() / 3 TIMEOUT 5 WAIT_TEXT
 RETURN 
ENDPROC
*------
PROCEDURE BacaExcell
 LPARAMETER CFILE
 LOCAL LCFILE
 LOCAL LCPATH , LCJUSTNAME , LCSTEM , OCN , LCCON , LLERR
 NAMACURSOR = 'curTemp'
 LCFILE = CFILE
 LCPATH = JUSTPATH(LCFILE)
 LCJUSTFNAME = JUSTFNAME(LCFILE)
 LCSTEM = JUSTSTEM(LCJUSTFNAME)
 OCN = CREATEOBJECT('ADODB.CONNECTION')
 LCCON =  ;
      'Driver={Microsoft Excel Driver (*.xls)};' + 'DriverId=790;' + 'Dbq=' + LCJUSTFNAME +  ;
';' + 'DefaultDir=' + LCPATH + ';'
  OCN.OPEN(LCCON)
 ORS = OCN.EXECUTE('SELECT * FROM [' + LCSTEM + '$]')
 BB = ORS.FIELDS.COUNT - 1
 FF = ''
 DIMENSION CC( BB + 1 ) , HH( BB + 1 )
 FOR I = 0 TO BB
    CC( I + 1 ) = ORS.FIELDS(I).NAME
    DD = ORS.FIELDS(I).TYPE
    DO CASE 
    CASE DD = 5
       EE = CC(I + 1) + ' ' + 'N(20.2)'
       HH( I + 1 ) = 0
    CASE DD = 200
       EE = CC(I + 1) + ' ' + 'C(150)'
       HH( I + 1 ) = ''
    CASE DD = 135
       EE = CC(I + 1) + ' ' + 'D(8)'
       HH( I + 1 ) = CTOD('01/01/1990')
    CASE DD = 11
       EE = CC(I + 1) + ' ' + 'L(1)'
       HH( I + 1 ) = .F.
    ENDCASE 
 ENDFOR 
ENDPROC
*------
PROCEDURE aadd
 LPARAMETER ANAME , AISI
 AA = ALEN(ANAME)
 DIMENSION AA( 2 )
 DIMENSION ANAME( ALEN(ANAME) + 1 )
 ANAME( ALEN(ANAME) + 1 ) = AISI
 RETURN ANAME
ENDPROC
*------
PROCEDURE asistenku
 LPARAMETER KATA1 , KATA2 , KATA3
 PUBLIC GNUPPER
 NAVLAGENT = ADIR(CAVLAGENT,GETENV('windir') + '\msagent\chars\*.acs')
 IF NAVLAGENT > 0
    OAGENT = CREATEOBJECT('Agent.Control.1')
    OAGENT.CONNECTED = .T.
    GNLOWER = 1
    GNUPPER = NAVLAGENT
    XAGENT =  ;
         IIF(MONTH(DATE()) < GNUPPER,CAVLAGENT(MONTH(DATE()),1),CAVLAGENT(INT((GNUPPER - GNLOWER + 1) * RAND() + GNLOWER),1))
     OAGENT.CHARACTERS.LOAD(ALLTRIM(XAGENT),GETENV('windir') + '\msagent\chars\' + ALLTRIM(XAGENT))
    OCHAR = OAGENT.CHARACTERS(ALLTRIM(XAGENT))
     OCHAR.MOVETO(RAND() * 600,RAND() * 600)
     OCHAR.SHOW
     OCHAR.SPEAK(KATA1)
     OCHAR.SPEAK(KATA2)
     OCHAR.SPEAK(KATA3)
    GNUPPER = 0
    FOR EACH ANIMATION IN OCHAR.ANIMATIONNAMES
       GNUPPER = GNUPPER + 1
       DIMENSION DTARRAY( GNUPPER ) AS CHARACTER
       DTARRAY( GNUPPER ) = ANIMATION
    ENDFOR 
    XAGENT =  ;
         IIF(MONTH(DATE()) < GNUPPER,DTARRAY(MONTH(DATE())),DTARRAY(INT((GNUPPER - GNLOWER + 1) * RAND() + GNLOWER)))
    X = 'oChar.Play("' + XAGENT + '")'
     &x
    WAIT ''
 ENDIF 
 RETURN 
ENDPROC
*------
PROCEDURE ErrorMsg
 LPARAMETER TCMESSAGETEXT , TNDIALOGTYPE , TCMESSAGETITLE
 LOCAL LNANSWER
 IF EMPTY(TCMESSAGETEXT)
    TCMESSAGETEXT =  ;
         'Syntax Error: ErrorMsg(tcMessageText, tnDialogType, tcMessageTitle)'
 ENDIF 
 IF EMPTY(TNDIALOGTYPE)
    TNDIALOGTYPE = 16
 ENDIF 
 IF EMPTY(TCMESSAGETITLE)
    TCMESSAGETITLE = 'Perhatian!!'
 ENDIF 
 IF TNDIALOGTYPE == 3
    LNANSWER = MYMESSAGEBOX(TCMESSAGETEXT,TNDIALOGTYPE,TCMESSAGETITLE)
 ENDIF 
 IF TNDIALOGTYPE == 4
    LNANSWER = MYMESSAGEBOX(TCMESSAGETEXT,TNDIALOGTYPE,TCMESSAGETITLE)
 ELSE 
    LNANSWER = MESSAGEBOX(TCMESSAGETEXT,TNDIALOGTYPE,TCMESSAGETITLE)
 ENDIF 
 RETURN LNANSWER
ENDPROC
*------
PROCEDURE MyMessageBox
 LPARAMETER TCMESSAGE , TNDIALOGTYPE , TCCAPTION
 LOCAL NRETVAL , LOFORM
 IF TNDIALOGTYPE = 4
    LOFORM = CREATEOBJECT('MyYaTidak',TCMESSAGE,TCCAPTION)
 ENDIF 
 IF TNDIALOGTYPE = 3
    LOFORM = CREATEOBJECT('MyYaTidakBatal',TCMESSAGE,TCCAPTION)
 ENDIF 
 IF EMPTY(TNDIALOGTYPE)
     ERRORMSG(TCMESSAGE)
 ENDIF 
  LOFORM.SHOW()
 NRETVAL = -1
 NRETVAL = LOFORM.URETCODE
  LOFORM.RELEASE()
 RETURN NRETVAL
ENDPROC
*------
PROCEDURE PrintMerge
 LPARAMETER TCFILE , TCREC
 OWORD = CREATEOBJECT('Word.Application')
 OWORD.VISIBLE = .F.
 OWORD.WINDOWSTATE = 2
 WCONN = GCDOCPATH + '\' + 'connloanapp.odc'
  OWORD.DOCUMENTS.OPEN(TCFILE)
  OWORD.ACTIVEDOCUMENT.MAILMERGE.OPENDATASOURCE(WCONN)
 IF OWORD.ACTIVEDOCUMENT.MAILMERGE.STATE = 2
    WAIT WINDOW 'in if ' + STR(TCREC)
    OWORD.ACTIVEDOCUMENT.MAILMERGE.DATASOURCE.ACTIVERECORD = TCREC
    WAIT WINDOW 'after active record'
    OWORD.ACTIVEDOCUMENT.MAILMERGE.DESTINATION = 1
    OWORD.ACTIVEDOCUMENT.MAILMERGE.DATASOURCE.FIRSTRECORD =  ;
         OWORD.ACTIVEDOCUMENT.MAILMERGE.DATASOURCE.ACTIVERECORD
    OWORD.ACTIVEDOCUMENT.MAILMERGE.DATASOURCE.LASTRECORD =  ;
         OWORD.ACTIVEDOCUMENT.MAILMERGE.DATASOURCE.ACTIVERECORD
     OWORD.ACTIVEDOCUMENT.MAILMERGE.EXECUTE
 ENDIF 
  OWORD.QUIT(0)
 RELEASE OWORD
 RETURN .T.
ENDPROC
*------
PROCEDURE TglToStr
 LPARAMETER DTANGGAL
 RETURN '01-januari-2008'
 LOCAL RET_VAL
 RET_VAL =  ;
      STR(DAY(DTANGGAL),2) + ' ' + TGLTOBLN(DTANGGAL) + ' ' + STR(YEAR(DTANGGAL),4)
 RETURN RET_VAL
ENDPROC
*------
PROCEDURE tgltobln
 RETURN 
ENDPROC
*------
PROCEDURE hitungjam
 LPARAMETER MJAM1 , MJAM2
 JAM1 = VAL(LEFT(MJAM1,2)) * 3600
 MNT1 = VAL(SUBSTR(MJAM1,4,2)) * 60
 DTK1 = VAL(SUBSTR(MJAM1,7,2))
 JDTK1 = JAM1 + MNT1 + DTK1
 JAM2 = VAL(LEFT(MJAM2,2)) * 3600
 MNT2 = VAL(SUBSTR(MJAM2,4,2)) * 60
 DTK2 = VAL(SUBSTR(MJAM2,7,2))
 JDTK2 = JAM2 + MNT2 + DTK2
 DTK = ABS(JDTK1 - JDTK2)
 RETURN DTK
ENDPROC
*------
PROCEDURE MySqlExec
 LPARAMETER MYODBC , MSQL , MHASIL
 LOCAL LCEK
 LCEK = SQLEXEC(MYODBC,MSQL,MHASIL)
 IF LCEK < 1
     MESSAGEBOX('Query gagal, cek program atau koneksi jaringan',48)
    RETURN .F.
 ENDIF 
 RETURN .T.
ENDPROC
*------
PROCEDURE hitungjam
 LPARAMETER JAM1 , JAM2
 DETIK1 = JAM2DETIK(JAM1)
 DETIK2 = JAM2DETIK(JAM2)
 DETIK = DETIK2 - DETIK1
 HASIL = DETIK2JAM(DETIK)
 RETURN HASIL
ENDPROC
*------
PROCEDURE jam2detik
 LPARAMETER JAM
 LOCAL JM , DETIK , MN , DT
 JM = LEFT(JAM,AT(':',JAM))
 DETIK = VAL(JM) * 60 * 60
 MN = SUBSTR(JAM,4,2)
 DETIK = DETIK + (VAL(MN) * 60)
 DT = SUBSTR(JAM,7,2)
 DETIK = DETIK + VAL(DT)
 RETURN DETIK
ENDPROC
*------
PROCEDURE detik2jam
 LPARAMETER DETIK
 LOCAL JM , MN , HASIL
 JM = INT(DETIK / 3600)
 DETIK = DETIK - (JM * 3600)
 MN = INT(DETIK / 60)
 DETIK = DETIK - (MN * 60)
 HASIL =  ;
      ALLTRIM(STR(JM)) + ':' + TRANSFORM(MN,'99') + ':' + TRANSFORM(DETIK,'99')
 RETURN HASIL
ENDPROC
*------
PROCEDURE jam2angka
 LPARAMETER MJAM
 LOCAL MTH , MBL , MHR , MJM , MMN , MDT
 MTH = TRANSFORM(YEAR(MJAM),'9999')
 MBL = RIGHT('00' + ALLTRIM(TRANSFORM(MONTH(MJAM),'99')),2)
 MHR = RIGHT('00' + ALLTRIM(TRANSFORM(DAY(MJAM),'99')),2)
 MJM = RIGHT('00' + ALLTRIM(TRANSFORM(HOUR(MJAM),'99')),2)
 MMN = RIGHT('00' + ALLTRIM(TRANSFORM(MINUTE(MJAM),'99')),2)
 MDT = RIGHT('00' + ALLTRIM(TRANSFORM(SEC(MJAM),'99')),2)
 RETURN MTH + MBL + MHR + MJM + MMN + MDT
ENDPROC
*------
PROCEDURE ganti
 PARAMETER MKATA , MASAL , MGANTI
 IF AT(MASAL,MKATA) = 0
    RETURN MKATA
 ENDIF 
 KATA1 = LEFT(MKATA,AT(MASAL,MKATA) - 1)
 KATA2 = SUBSTR(MKATA,AT(MASAL,MKATA) + LEN(MASAL))
 KATA3 = KATA1 + MGANTI + KATA2
 RETURN KATA3
ENDPROC
*------
PROCEDURE keluar
 FOR X = 1 TO _SCREEN.FORMCOUNT
    IF UPPER(_SCREEN.FORMS(X).NAME) = 'AWAL'
       SET SYSMENU OFF
        _SCREEN.FORMS( X ).SHOW
    ENDIF 
 ENDFOR 
 RETURN 
ENDPROC
*------
PROCEDURE errhand
 PARAMETER ERRNUM , ERRMESSAGE , BARISSALAH , MPROG , BARISPROG
 CSQL = 'select COUNT(barissalah) as ada from log_error'
 LCEK = SQLEXEC(OODBC,CSQL,'SALAH')
 IF LCEK < 1
     GAGALSQL('Gagal baca LOG_ERROR')
 ENDIF 
 MADA = SALAH.ADA
 IF VARTYPE(SALAH.ADA) = 'C'
    MADA = VAL(SALAH.ADA)
 ENDIF 
 IF MADA > 0
    USE 
 ELSE 
    USE 
    CSQL =  ;
         'INSERT into log_error (tanggal,nomorerror,pesansalah,barissalah,program,barisprog) values ' +  ;
   "('" + SQLDATE(TGLNOW) + "','" + STR(ERRNUM) + "','" +  ;
   CEKKATA(ERRMESSAGE) + "','" + CEKKATA(BARISSALAH) + "','" + CEKKATA(MPROG) +  ;
   "','" + STR(BARISPROG) + "')"
    LCEK = SQLEXEC(OODBC,CSQL)
    IF LCEK < 1
        MESSAGEBOX(CSQL)
        GAGALSQL('Gagal baca LOG_ERROR 000000')
    ENDIF 
 ENDIF 
 RETURN 
ENDPROC
*------
PROCEDURE gagalsql
 PARAMETER PESAN
  MESSAGEBOX(PESAN)
 RETURN 
ENDPROC
*------
PROCEDURE emptychk
 PARAMETER PCDOC
 IF  .NOT. EMPTY(PCDOC)
    RETURN .T.
 ELSE 
    WAIT WINDOW 'Enter a name for the Word Document'
    RETURN 0
 ENDIF 
ENDPROC
*------
PROCEDURE haribulan
 PARAMETER MTGL
 RETURN DAY(AKHIRBLN(MTGL))
ENDPROC
*------
PROCEDURE jangkawaktu
 PARAMETER ARG1 , ARG2
 LOCAL LAMA
 LAMA = ((YEAR(ARG2) - YEAR(ARG1)) * 12) + (MONTH(ARG2) - MONTH(ARG1)) + 1
 RETURN LAMA
ENDPROC
*------
PROCEDURE selisihbln
 PARAMETER ARG1 , ARG2
 LOCAL HSL
 HSL = ((YEAR(ARG2) - YEAR(ARG1)) * 12) + (MONTH(ARG2) - MONTH(ARG1)) + 1
 RETURN HSL
ENDPROC
*------

PROCEDURE hitungnrc
 PARAMETER MTGL1 , MTGL2
 HITUNG = SYS(2015)
 CREATE CURSOR HITUNGNRC ( MTGL DATE , TANGGAL DATE , NOPER C ( 10 ) , SALDOAWAL N ( 15  ;
      ) , MUTASIDEBET N ( 15 ) , MUTASIKREDIT N ( 15 ) , SALDOAKHIR N ( 15 )  ;
      )
 CSQL =  ;
      'SELECT t1.noper, t1.tanggal, t1.saldoawal, t1.mutasidebet, t1.mutasikredit, ' +  ;
't1.saldoakhir FROM akt_neraca t1 ' +  ;
"WHERE tutupbuku<>'T' and tanggal = ( SELECT MAX( t2.tanggal ) " +  ;
"FROM akt_neraca t2 WHERE t1.noper = t2.noper AND tutupbuku<>'Y' and tanggal < ?sqldate(mtgl1) " + 'GROUP BY noper ) '
 LCEK = SQLEXEC(OODBC,CSQL,HITUNG)
 GO TOP
 DO WHILE  .NOT. EOF()
    MTANGGAL = TANGGAL
    MNOPER = NOPER
    MSALDOAWAL = SALDOAWAL
    MMUTASIDEBET = MUTASIDEBET
    MMUTASIKREDIT = MUTASIKREDIT
    MSALDOAKHIR = SALDOAKHIR
    SELECT HITUNGNRC
    APPEND BLANK
    REPLACE MTGL WITH MTANGGAL , TANGGAL WITH MTANGGAL , NOPER WITH MNOPER , SALDOAWAL WITH  ;
         MSALDOAWAL
    REPLACE MUTASIDEBET WITH MMUTASIDEBET , MUTASIKREDIT WITH MMUTASIKREDIT , SALDOAKHIR  ;
         WITH MSALDOAKHIR
     SELECT &HITUNG
    SKIP 
 ENDDO 
 IF MTGL1 <> MTGL2
    CSQL =  ;
         'SELECT t1.noper, t1.tanggal, t1.saldoawal, t1.mutasidebet, t1.mutasikredit, ' +  ;
   't1.saldoakhir FROM akt_neraca t1 ' +  ;
   "WHERE tutupbuku<>'T' and tanggal = ( SELECT MAX( t2.tanggal ) " +  ;
   "FROM akt_neraca t2 WHERE t1.noper = t2.noper AND tutupbuku<>'Y' and tanggal < ?sqldate(mtgl2) " +  ;
   'GROUP BY noper ) '
    LCEK = SQLEXEC(OODBC,CSQL,HITUNG)
    GO TOP
    DO WHILE  .NOT. EOF()
       MTANGGAL = TANGGAL
       MNOPER = NOPER
       MSALDOAWAL = SALDOAWAL
       MMUTASIDEBET = MUTASIDEBET
       MMUTASIKREDIT = MUTASIKREDIT
       MSALDOAKHIR = SALDOAKHIR
       SELECT HITUNGNRC
       APPEND BLANK
       REPLACE MTGL WITH MTANGGAL , TANGGAL WITH MTANGGAL , NOPER WITH MNOPER , SALDOAWAL WITH  ;
            MSALDOAWAL
       REPLACE MUTASIDEBET WITH MMUTASIDEBET , MUTASIKREDIT WITH MMUTASIKREDIT , SALDOAKHIR  ;
            WITH MSALDOAKHIR
        SELECT &HITUNG
       SKIP 
    ENDDO 
 ENDIF 
  SELECT &HITUNG
 USE 
ENDPROC
*------
PROCEDURE saldoner
 PARAMETER TGL1 , MSET
 LOCAL HIT , MSET1 , MSET2 , JML , JML1
 IF MSET = ' '
    RETURN 0
 ENDIF 
 JML = 0
 MSET1 = MSET
 MSET2 = ''
 T = '+'
 DO WHILE .T.
    X = LEFT(MSET1,1)
    IF X = '+' .OR. X = '-' .OR. X = '/' .OR. X = '*' .OR. X = '(' .OR. X = ')'
       JML1 = 0
       MPANJ = LEN(MSET2)
       SUM FOR TANGGAL = TGL1 AND LEFT(NOPER,MPANJ) = MSET2 TO JML1 SALDOAKHIR
       DO CASE 
       CASE T = '+'
          JML = JML + JML1
       CASE T = '-'
          JML = JML - JML1
       CASE T = '/'
          JML = JML / JML1
       CASE T = '*'
          JML = JML * JML1
       OTHERWISE 
          JML = JML + JML1
       ENDCASE 
       T = X
       MSET2 = ''
       MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
    ENDIF 
    MSET2 = MSET2 + LEFT(MSET1,1)
    IF LEN(MSET1) = 0
       JML1 = 0
       ADA = .F.
       MPANJ = LEN(MSET2)
       SUM FOR TANGGAL = TGL1 AND LEFT(NOPER,MPANJ) = MSET2 TO JML1 SALDOAKHIR
       DO CASE 
       CASE T = '-'
          JML = JML - JML1
       CASE T = '/'
          JML = JML / JML1
       CASE T = '*'
          JML = JML * JML1
       CASE T = '+'
          JML = JML + JML1
       OTHERWISE 
          JML = JML + JML1
       ENDCASE 
       T = X
       MSET2 = ''
       MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
       EXIT 
    ENDIF 
    MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
 ENDDO 
 RETURN JML
ENDPROC
*------
PROCEDURE hitner
 PARAMETER MTGL1 , MSET
 LOCAL HIT , MSET1 , MSET2 , JML , JML1
 IF MSET = ' '
    RETURN 0
 ENDIF 
 JML = 0
 HITUNG = SYS(2015)
 MSET1 = MSET
 MSET2 = ''
 T = '+'
 DO WHILE .T.
    X = LEFT(MSET1,1)
    IF X = '+' .OR. X = '-' .OR. X = '/' .OR. X = '*' .OR. X = '(' .OR. X = ')'
       JML1 = 0
       MPANJ = LEN(MSET2)
       CSQL =  ;
            'SELECT t1.noper, t1.tanggal, t1.saldoawal, t1.mutasidebet, t1.mutasikredit, ' +  ;
      't1.saldoakhir FROM akt_neraca t1 ' +  ;
      "WHERE LEFT(t1.noper,?mpanj)=?mset2 and tutupbuku<>'T' and tanggal = ( SELECT MAX( t2.tanggal ) " +  ;
      "FROM akt_neraca t2 WHERE t1.noper = t2.noper AND tutupbuku<>'Y' and tanggal < ?sqldate(mtgl1) " +  ;
      'GROUP BY noper ) '
       LCEK = SQLEXEC(OODBC,CSQL,HITUNG)
       SUM TO JML1 SALDOAKHIR
       USE 
       DO CASE 
       CASE T = '+'
          JML = JML + JML1
       CASE T = '-'
          JML = JML - JML1
       CASE T = '/'
          JML = JML / JML1
       CASE T = '*'
          JML = JML * JML1
       OTHERWISE 
          JML = JML + JML1
       ENDCASE 
       T = X
       MSET2 = ''
       MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
    ENDIF 
    MSET2 = MSET2 + LEFT(MSET1,1)
    IF LEN(MSET1) = 0
       JML1 = 0
       ADA = .F.
       MPANJ = LEN(MSET2)
       CSQL =  ;
            'SELECT t1.noper, t1.tanggal, t1.saldoawal, t1.debet, t1.kredit, ' +  ;
      't1.saldo FROM neraca t1 ' +  ;
      "WHERE LEFT(t1.noper,?mpanj)=?mset2 and tutupbuku<>'T' and tanggal = ( SELECT MAX( t2.tanggal ) " +  ;
      "FROM akt_neraca t2 WHERE t1.noper = t2.noper AND tutupbuku<>'Y' and tanggal < ?sqldate(mtgl1) " +  ;
      'GROUP BY noper ) '
       LCEK = SQLEXEC(OODBC,CSQL,HITUNG)
       SUM TO JML1 SALDOAKHIR
       USE 
       DO CASE 
       CASE T = '-'
          JML = JML - JML1
       CASE T = '/'
          JML = JML / JML1
       CASE T = '*'
          JML = JML * JML1
       CASE T = '+'
          JML = JML + JML1
       OTHERWISE 
          JML = JML + JML1
       ENDCASE 
       T = X
       MSET2 = ''
       MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
       EXIT 
    ENDIF 
    MSET1 = SUBSTR(MSET1,2,LEN(MSET1) - 1)
 ENDDO 
 RETURN JML
ENDPROC
*------
PROCEDURE bacaneraca
     	PARAMETER MKANTOR , MNOPER , MTGL , MAWAL
     	*MESSAGEBOX(Mtgl)
     	IF PARAMETERS() < 4
         		MAWAL = 'AKHIR'
     	ENDIF  
     	MAWAL = IIF(MAWAL <> 'AKHIR','AWAL','AKHIR')
 	OLDDBF = SELECT()
 	MTB = 'T'
 	IF MKANTOR = '0000' .OR. EMPTY(MKANTOR)
    		IF MAWAL = 'AKHIR'
       			CSQL ='select MAX(tanggal) as tanggal from neraca where noper=?mnoper and tanggal<=?mtgl'
    		ELSE 
       			CSQL ='select MAX(tanggal) as tanggal from neraca where noper=?mnoper and tanggal<?mtgl'
    		ENDIF 
 	ELSE 
    		IF MAWAL = 'AKHIR'
       			CSQL ='select MAX(tanggal) as tanggal from neraca where kantor=?mkantor and noper=?mnoper and tanggal<=?mtgl'
    		ELSE 
       			CSQL ='select MAX(tanggal) as tanggal from neraca where kantor=?mkantor and noper=?mnoper and tanggal<?mtgl'
    		ENDIF 
 	ENDIF 
 	LCEK = SQLEXEC(OODBC,CSQL,'CEK')
 	IF lcek<1
 	   MESSAGEBOX("salah")
 	ENDIF 
 	MTGLMUTASI = TANGGAL
 	*------>> jika cetak untuk akhir bulan maka saldo awal sebelum tutup buku
 	*         jika cetak selain akhir tahun ambil yg tutup buku
 	IF MONTH(mtgl)=12 AND DAY(mtgl) = 31 
 	   IF YEAR(mtgl)=YEAR(mtglmutasi)
 	      mtb='T'  && baca sebelum tutup buku
 	   ELSE
 	      mtb='Y'  && baca saldo tutup buku jika ada
 	   ENDIF    
 	ENDIF    
 	
 	IF MTB= 'Y'
 	   csql="select tb from neraca where noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and tb<>'Y'"
 	   lcek=SQLEXEC(oODBC,csql,"CEK")
 	   IF tb='Y' && ada tutup buku
 	      IF MKANTOR = '0000' .OR. EMPTY(MKANTOR)
          	 CSQL ="select saldo from neraca where noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and tb<>'Y'"
       	  ELSE 
           	 CSQL ="select saldo from neraca where kantor=?mkantor and noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and tb<>'Y'"
          ENDIF 
 	   ELSE
 	      IF MKANTOR = '0000' .OR. EMPTY(MKANTOR)
          	 CSQL ="select saldo from neraca where noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"'"
       	  ELSE 
           	 CSQL ="select saldo from neraca where kantor=?mkantor and noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"'"
          ENDIF 
 	   ENDIF 
 	ELSE
 	   IF MKANTOR = '0000' .OR. EMPTY(MKANTOR)
          	 CSQL ="select saldo from neraca where noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and (tb<>'Y' or ISNULL(tb))"
       	  ELSE
       	  * rev 25052022 guntur awal <> di ganti =
          * 	 CSQL ="select saldo from neraca where kantor=?mkantor and noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and (tb<>'Y' or ISNULL(tb))"
		 	 CSQL ="select saldo from neraca where kantor=?mkantor and noper='"+mnoper+"' and tanggal='"+sqldate(mtglmutasi)+"' and (tb='Y' or ISNULL(tb))"

          ENDIF 
 	ENDIF    
 	
 	LCEK = SQLEXEC(OODBC,CSQL,'CEK')
 	* TESTGUNTUR
*!*	 	IF MNOPER='540'
*!*	 	  BROW
*!*	 	  MESSAGEBOX(CSQL)
 *	 RETURN
*!*	 	ENDIF
 *	RETURN
 	
 	IF lcek<1
 	   messagebox("cari saldo salah")
 	ENDIF 

 	MSALDO = SALDO
 	USE 
 	SELECT (OLDDBF)
 	RETURN MSALDO
ENDPROC
*------
PROCEDURE bacalogctt
 PARAMETER TANDA
 OLDALIAS = ALIAS()
 MYCURSOR = SYS(2015)
 CSQL = 'select catatan from log_proses'
 LCEK = SQLEXEC(OODBC,CSQL,MYCURSOR)
 MTEKS = CATATAN
 KE1 = AT(TANDA,MTEKS)
 KATA1 = SUBSTR(MTEKS,KE1,10)
 USE 
 SELECT (OLDALIAS)
 RETURN KATA1
ENDPROC
*------
PROCEDURE savelogctt
 PARAMETER TANDA , JUMLAH
 OLDALIAS = ALIAS()
 MYCURSOR = SYS(2015)
 CSQL = 'select catatan from log_proses'
 LCEK = SQLEXEC(OODBC,CSQL,MYCURSOR)
 MTEKS = CATATAN
 KE1 = AT(TANDA,MTEKS)
 KATA1 = SUBSTR(MTEKS,KE1,10)
 GANTI1 = LEFT(TANDA + ALLTRIM(STR(JUMLAH)) + SPACE(10),10)
 MTEKS = STRTRAN(MTEKS,KATA1,GANTI1)
 CSQL = 'update log_proses set catatan=?mteks'
 LCEK = SQLEXEC(OODBC,CSQL)
 USE 
 SELECT (OLDALIAS)
ENDPROC
*------
PROCEDURE cekkata
 PARAMETER MKATA
 MKATA = CHRTRAN(MKATA,";'\",'')
 RETURN MKATA
ENDPROC
*------
PROCEDURE tgltohari
 LPARAMETER MTGL
 HARI = 'senin'
 RETURN HARI
ENDPROC
*------
PROCEDURE mtype
 LPARAMETER MDATA
 IF VARTYPE(MDATA) = 'X'
    RETURN 0
 ENDIF 
 MDATA = UPPER(MDATA)
 MAWAL = AT('(',MDATA) + 1
 MAKHIR = AT(')',MDATA)
 MLEBAR = ''
 MLEBAR = SUBSTR(MDATA,MAWAL,MAKHIR - MAWAL)
 RETURN VAL(MLEBAR)
ENDPROC
*------
PROCEDURE formatangka
 LPARAMETER MLEBAR
 MLEBAR = IIF(MLEBAR = 0,15,MLEBAR)
 TAMBAH = INT(MLEBAR / 3)
 MLEBAR = MLEBAR + TAMBAH
 MFORMAT = RIGHT('999,999,999,999,999,999',MLEBAR)
 MFORMAT = IIF(LEFT(MFORMAT,1) = ',',SUBSTR(MFORMAT,2),MFORMAT)
 RETURN MFORMAT
ENDPROC
*------
PROCEDURE num2car
 LPARAMETER VNUM , LBR
 VNUM = ABS(VNUM)
 ANUM = TRANSFORM(VNUM,'999999999999999')
 ANUM = '000000000000000' + ALLTRIM(ANUM)
 ANUM = RIGHT(ANUM,LBR)
 RETURN ANUM
ENDPROC
*------
PROCEDURE c2c
 LPARAMETER MCHAR , PANJANG
 RETURN LEFT(MCHAR + SPACE(PANJANG),PANJANG)
ENDPROC
*------
PROCEDURE d2c
 LPARAMETER MTANGGAL
 IF EMPTY(MTANGGAL) .OR. MTANGGAL = CTOD('  -  -    ')
    CTGL = '        '
 ELSE 
    CTGL =  ;
         TRANSFORM(YEAR(MTANGGAL),'9999') + RIGHT('00' + ALLTRIM(STR(MONTH(MTANGGAL))),2) +  ;
   RIGHT('00' + ALLTRIM(STR(DAY(MTANGGAL),2)),2)
 ENDIF 
 RETURN CTGL
ENDPROC
*------
PROCEDURE c2d
 LPARAMETER CHRTGL
 LOCAL MTH , MBL , HR
 MTH = SUBSTR(CHRTGL,1,4)
 MBL = SUBSTR(CHRTGL,5,2)
 MHR = SUBSTR(CHRTGL,7,2)
 RETURN CTOD(MHR + '-' + MBL + '-' + MTH)
ENDPROC
*------
PROCEDURE n2c
 LPARAMETER VNUM , LBR
 VNUM = ABS(VNUM)
 ANUM = TRANSFORM(VNUM,'999999999999999')
 ANUM = '000000000000000' + ALLTRIM(ANUM)
 ANUM = RIGHT(ANUM,LBR)
 RETURN ANUM
ENDPROC
*------
PROCEDURE c2n
 LPARAMETER SNUM
 RETURN VAL(SNUM)
ENDPROC
*------
PROCEDURE dt2c
 LPARAMETER MTANGGAL
 IF EMPTY(MTANGGAL) .OR. MTANGGAL = CTOD('  -  -    ')
    CTGL = '              '
 ELSE 
    CTGL =  ;
         TRANSFORM(YEAR(MTANGGAL),'9999') + RIGHT('00' + ALLTRIM(STR(MONTH(MTANGGAL))),2) +  ;
   RIGHT('00' + ALLTRIM(STR(DAY(MTANGGAL),2)),2) + LEFT(TIME(),2) +  ;
   SUBSTR(TIME(),4,2) + SUBSTR(TIME(),7,2)
 ENDIF 
 RETURN CTGL
ENDPROC
*------
PROCEDURE cekvld
 LPARAMETER HURUF
 HURUF = STRTRAN(HURUF,'.',' ')
 HURUF = STRTRAN(HURUF,',',' ')
 HURUF = STRTRAN(HURUF,'    ',' ')
 HURUF = STRTRAN(HURUF,'   ',' ')
 HURUF = STRTRAN(HURUF,'  ',' ')
 HURUF = STRTRAN(HURUF,'  ',' ')
 RETURN HURUF
ENDPROC
*------
PROCEDURE mydtos
 LPARAMETER MTANGGAL
 LOCAL MHARI , MBLN , MTH
 IF EMPTY(MTANGGAL)
    RETURN '00000000'
 ENDIF 
 MHARI = RIGHT('00' + ALLTRIM(STR(DAY(MTANGGAL))),2)
 MBLN = RIGHT('00' + ALLTRIM(STR(MONTH(MTANGGAL))),2)
 MTH = RIGHT('0000' + ALLTRIM(STR(YEAR(MTANGGAL))),4)
 RETURN MHARI + MBLN + MTH
ENDPROC
*------
PROCEDURE lewat
 RETURN 
ENDPROC
*------
PROCEDURE urutnorek
 PARAMETER MJENISTR , MKODEMARKETING
 LOCAL OLDSELECT
 OLDSELECT = SELECT()
 MNOREK = ''
 DO CASE 
 CASE MJENISTR = '1'
    IF DEFASETNOREK = '1'
    ELSE 
    ENDIF 
 CASE MJENISTR = '2'
    CSQL = 'select MAX(norek) as lastNorek from simpanan where jenis=1'
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MNOREK = LASTNOREK
    USE 
    MNOREK = AUTONOMOR(MNOREK)
 CASE MJENISTR = '3'
    CSQL = 'select MAX(norek) as lastNorek from simpanan where jenis=2'
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MNOREK = LASTNOREK
    USE 
    MNOREK = AUTONOMOR(MNOREK)
 CASE MJENISTR = '4'
    CSQL = 'select MAX(norek) as lastNorek from simpanan where jenis=3'
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MNOREK = LASTNOREK
    USE 
    MNOREK = AUTONOMOR(MNOREK)
 CASE MJENISTR = '5'
    CSQL = 'select MAX(norek) as lastNorek from pinjaman'
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MNOREK = LASTNOREK
    USE 
    MNOREK = AUTONOMOR(MNOREK)
 OTHERWISE 
 ENDCASE 
 SELECT (OLDSELECT)
 RETURN MNOREK
ENDPROC
*------
PROCEDURE Mysqlexec
 PARAMETER MODBC , CSQL , MATA
 IF VARTYPE(MODBC) = 'X'
    MODBC = OODBC
 ENDIF 
 IF VARTYPE(CSQL) = 'X'
    CSQL = ''
 ENDIF 
 IF VARTYPE(MDATA) = 'X'
    MDATA = ''
 ENDIF 
 DO FORM BacaSQL TO MHASIL WITH MODBC , CSQL , MDATA
 RETURN MHASIL
ENDPROC
*------
PROCEDURE AutoNoberkas
 IF DEFAAUTOBERKAS = 'T' .OR. EMPTY(DEFAAUTOBERKAS)
    RETURN '00000001'
 ENDIF 
 OLDSELECT = SELECT()
 CSQL = 'select MAX(noberkas) as berkas from pinjaman_jaminan'
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 MNOMOR = AUTONOMOR(IIF(ISNULL(BERKAS),'00000000',BERKAS))
 SELECT (OLDSELECT)
 RETURN MNOMOR
ENDPROC
*------
PROCEDURE autonomor
 PARAMETER MBUKTI
 LOCAL P , XBUKTI1 , XBUKTI2 , MURT , MCAR
 P = 0
 MCAR = MBUKTI
 DO WHILE P <= LEN(MBUKTI)
    P = P + 1
    IF AT(LEFT(MCAR,1),'0123456789') > 0
       MCAR = SUBSTR(MCAR,2,LEN(MCAR) - 1)
    ELSE 
       EXIT 
    ENDIF 
 ENDDO 
 P = 0
 MURT = VAL(MBUKTI)
 XBUKTI1 = MURT + 1
 XBUKTI3 = RIGHT(('00000000' + ALLTRIM(STR(XBUKTI1,15)) + ALLTRIM(MCAR)),8)
 RETURN XBUKTI3
ENDPROC
*------
PROCEDURE menucetak
 ACTIVATE SCREEN
 DEFINE POPUP POPFRUITS FROM 5 , 5 MARGIN MULTISELECT 
 DEFINE BAR 1 OF POPFRUITS PROMPT '\<Apples' MARK CHR(3)
 DEFINE BAR 2 OF POPFRUITS PROMPT '\<Bananas' MARK CHR(4)
 DEFINE BAR 3 OF POPFRUITS PROMPT '\<Grapes' MARK CHR(5)
 DEFINE BAR 4 OF POPFRUITS PROMPT '\<Lemons' MARK CHR(6)
 ON SELECTION POPUP POPFRUITS DO yourchoice    
 ACTIVATE POPUP POPFRUITS
ENDPROC
*------
PROCEDURE yourchoice
 FOR GNCOUNT = 1 TO CNTBAR('popFruits')
    IF MRKBAR('popFruits',GNCOUNT) = .T.
       ? PRMBAR('popFruits',GNCOUNT) AT 5
    ENDIF 
 ENDFOR 
ENDPROC

*------ perhitungan bunga
*PROCEDURE listbunga
PROCEDURE listjasa
 LPARAMETER MNOMORREK , TGLHIT , MKIRIM , MCURSOR
 LOCAL XKODE , XNOREK , TGLDAFTAR , JUMBUNGA , JUMPAJAK
 STORE 0 TO JUMBUNGA , JUMPAJAK
   
*!*	   IF mnorek='00005477'
*!*		 MESSAGEBOX(tglhit)
*!*	   ENDIF
   	
 OLDSELE = SELECT()
 IF VARTYPE(MCURSOR) = 'X' .OR. VARTYPE(MCURSOR) = 'L'
    MCURSOR = 'BUNGA'
 ENDIF 
  CREATE CURSOR &mCursor (tanggal d, bukti c(10),debet n(12),kredit n(12),saldo n(12),hari n(3),rate n(5,2), bunga n(12),pajak n(12),ket c(20))
 * cek nuilai
*!*	  MESSAGEBOX(mnomorrek)
*!*	  MESSAGEBOX(VARTYPE(mnomorrek))
 
 IF VARTYPE(MNOMORREK) = 'X'
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(TGLHIT) = 'X' .OR. VARTYPE(TGLHIT) = 'L'
    TGLHIT = TGLNOW
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(MKIRIM) = 'X' .OR. VARTYPE(MKIRIM) = 'L'
    MKIRIM = 'T'
 ENDIF 
 XNOREK = MNOMORREK
 CSQL =  ;
      'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
"simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
MNOMORREK + "' and b.iddata=(" +  ;
"select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "' and tanggal<'" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 IF LCEK < 1
     MESSAGEBOX(CSQL)
    
 ENDIF
 
 
* xsaldo di tutup dulu karena   
* MSALDOAWAL = IIF(SALDO=0,xsaldo,saldo)
msaldoawal = saldo

  
*!*	 
 MTGLBUKA = TGLBUKA
 IF RECCOUNT() = 0
    CSQL =  ;
         'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
   "simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
   MNOMORREK + "' and b.iddata=(" +  ;
   "select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "' )"
   
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MSALDOAWAL = 0
    MTGLBUKA = TGLBUKA
 ENDIF 
 IF NOREK <> MNOMORREK
    USE 
    SELECT (OLDSELE)
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF
 
*!*	   IF norek='00002083'
*!*			 MESSAGEBOX('setelah mak id'+TRANSFORM(msaldoawal,'999,999,999')) 
*!*	   ENDIF
 
 
  
 MRATEKHUSUS = IIF(RATE_KHUSUS = 'Y','Y','T')
 MRATESIMP = RATE
 MNOREK = NOREK
 MPRODUK = PRODUK
 MTGLTUTUP = TGLTUTUP
 MJENIS = JENIS
 
 USE 
*!*	 
*!*	 IF  .NOT. EMPTY(MTGLTUTUP) AND MTGLTUTUP < TGLHIT
*!*	   MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
*!*	    RETURN MRET
*!*	 ENDIF 
 
 CSQL =  ;
      "select * from setsandi_tab where jenis='" + MJENIS + "' and sandi='" + MPRODUK + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 
*BROWSE
 
*MESSAGEBOX('JENS '+MJENIS+' SANDI '+MPRODUK)

 MOPTPASIF = OPTPASIF
 MHARIPASIF = HARIPASIF
 MNOMIPASIF = NOMIPASIF
 XVER = VER
 XPAJAK = 0.1
 MOPTHARI = OPTHARI
 MA_RATE = A_RATE
 MA_RATE1 = A_RATE1
 MA_RATE2 = A_RATE2
 MA_RATE3 = A_RATE3
 MA_RATE4 = A_RATE4
 MA_RATE5 = A_RATE5
 MA_NOMI_RATE1 = A_NOMI_RATE1
 MA_NOMI_RATE2 = A_NOMI_RATE2
 MA_NOMI_RATE3 = A_NOMI_RATE3
 MA_NOMI_RATE4 = A_NOMI_RATE4
 MA_NOMI_RATE5 = A_NOMI_RATE5
 MA_TYPE_RATE = A_TYPE_RATE
 MP_RATE = P_RATE
 MP_RATE1 = P_RATE1
 MP_RATE2 = P_RATE2
 MP_RATE3 = P_RATE3
 MP_RATE4 = P_RATE4
 MP_RATE5 = P_RATE5
 MP_NOMI_RATE1 = P_NOMI_RATE1
 MP_NOMI_RATE2 = P_NOMI_RATE2
 MP_NOMI_RATE3 = P_NOMI_RATE3
 MP_NOMI_RATE4 = P_NOMI_RATE4
 MP_NOMI_RATE5 = P_NOMI_RATE5
 MP_TYPE_RATE = P_TYPE_RATE
 MANTARBANK = ANTARBANK
 MSALDOMINIMAL = SALDOMINIMAL
 MBATASBUNGA = BATASBUNGA
 MBATASPAJAK = BATASPAJAK
 MPAJAK = PAJAK
 MBUKTI = ''
 MRATE = A_RATE
 SBUNGA = 0
 
 
* mencari tgl mutasi terakhir
 CSQL =  ;
      "select MAX(tanggal) as tglmutasi from simpanan_mutasi where norek='" + MNOREK +  ;
"' and tanggal<'" + SQLDATE(AWALBLN(TGLHIT)) + "'  and kode='" + DEFATABSTOR +  ;
"' "
 LCEK = SQLEXEC(OODBC,CSQL,'smt')
 MTGLMUTASI = TGLMUTASI
 
* melihat mutasi dalam sebulan yg mau di hitung jasanya 
 
 CSQL =  ;
      "select * from simpanan_mutasi where norek='" + MNOREK + "' and tanggal>='" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "'  and tanggal<='" + SQLDATE(AKHIRBLN(TGLHIT)) +  ;
"' order by tanggal"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 

 xket =SPACE(60)
 
 
 DO CASE 
 CASE XVER = 2 .OR. XVER = 4

    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    SBUNGA = (mSALDOAWAL * MRATE)/1200
    
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE BUKTI WITH " SLD AWAL " , TANGGAL WITH MTGLHIT , SALDO WITH mSALDOAWAL, BUNGA WITH SBUNGA
    SELECT SMT
    GO TOP
   * browse
   * MBUNGA = 0

    XKET =SPACE(60)
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    DO WHILE  .NOT. EOF()
       IF TANGGAL > TGLHIT
          EXIT 
       ENDIF 
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
       IF TANGGAL >= AWALBLN(TGLHIT)
          MTANGGAL = TANGGAL
          MBUKTI = BUKTI
          MDEBET = DEBET
          MKREDIT = KREDIT
          MSALDO = IIF(ISNULL(SALDO),0,SALDO)
          MHARI = TANGGAL - MTGLTRANS

          
          IF MRATEKHUSUS = 'Y'
             MRATE = MRATESIMP
          ENDIF 
          MRATE = IIF(ISNULL(MRATE),0,MRATE)
          MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK)
          IF MSALDOAWAL <= MBATASBUNGA AND MBATASBUNGA > 0
             MRATE = 0
          ENDIF 
          IF MKREDIT<> 0
                do case
                  case day(mtanggal) <= 10
                    mbunga = round(((mkredit * mrate)/1200),0)
         *         case day(mtgltrans)>10 .and. day(mtanggal)<=20
                  case day(mtanggal)>10 .and. day(mtanggal)<=20
                    mbunga = round(((mkredit * mrate)/1200)*0.5,0)
                    xket =alltrim(xket)+ 'str-'+trans(day(mtanggal),'99')+' Rp.'+trans(mkredit,'999,999,999')
                  other
                    mbunga =0
                endcase

          ENDIF
          IF MDEBET <> 0
          do case
                   case day(mtanggal) <= 14
                        mbunga = round( ( (mdebet*mrate)/1200) *-1,0)
*                   case day(mtgltrans)>14 .and. day(mtanggal)<25
                   case day(mtanggal)>14 .and. day(mtanggal)<25

                        mbunga = round( ( (mdebet*mrate)/1200) *-0.5,0)
                        xket =alltrim(xket)+ 'amb-'+trans(day(mtanggal),'99')+' Rp.'+trans(mdebet,'999,999,999')
                   other
                       mbunga =0
                endcase
          ENDIF
             
          *MBUNGA = ROUND(MSALDOAWAL * (MHARI / 365) * (MRATE / 100),0)
*          MBUNGA = (MSALDOAWAL * MRATE)/1200
          MPJKBG = 0


          JUMBUNGA = JUMBUNGA + MBUNGA
          JUMPAJAK = JUMPAJAK + MPJKBG
          MTGLTRANS = TANGGAL
          MSALDOAWAL = SALDO
          
          
          MBUKTI = ' AWAL '
          SELECT (MCURSOR)
          APPEND BLANK
          REPLACE TANGGAL WITH MTGLTRANS , BUKTI WITH MBUKTI , DEBET WITH MDEBET
          REPLACE KREDIT WITH MKREDIT , SALDO WITH MSALDOAWAL , HARI WITH MHARI
          REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
       ELSE 
          MSALDOAWAL = SALDO
       ENDIF 
       SELECT SMT
       SKIP 
    ENDDO 
  

    MHARI = TGLHIT - MTGLTRANS
    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND MSALDOAWAL < MNOMIPASIF
       DO CASE 
       CASE MSALDOAWAL < MP_NOMI_RATE1 .OR. MP_NOMI_RATE1 = 0
          MRATE = MP_RATE
       CASE MSALDOAWAL >= MP_NOMI_RATE1 AND MSALDOAWAL < MP_NOMI_RATE2
          MRATE = MP_RATE1
       CASE MSALDOAWAL >= MP_NOMI_RATE2 AND MSALDOAWAL < MP_NOMI_RATE3
          MRATE = MP_RATE2
       CASE MSALDOAWAL >= MP_NOMI_RATE3 AND MSALDOAWAL < MP_NOMI_RATE4
          MRATE = MP_RATE3
       CASE MSALDOAWAL >= MP_NOMI_RATE4 AND MSALDOAWAL < MP_NOMI_RATE5
          MRATE = MP_RATE4
       CASE MSALDOAWAL >= MP_NOMI_RATE5
          MRATE = MP_RATE5
       ENDCASE 
    ELSE 
       DO CASE 
       CASE MSALDOAWAL < MA_NOMI_RATE1 .OR. MA_NOMI_RATE1 = 0
          MRATE = MA_RATE
       CASE MSALDOAWAL >= MA_NOMI_RATE1 AND MSALDOAWAL < MA_NOMI_RATE2
          MRATE = MA_RATE1
       CASE MSALDOAWAL >= MA_NOMI_RATE2 AND MSALDOAWAL < MA_NOMI_RATE3
          MRATE = MA_RATE2
       CASE MSALDOAWAL >= MA_NOMI_RATE3 AND MSALDOAWAL < MA_NOMI_RATE4
          MRATE = MA_RATE3
       CASE MSALDOAWAL >= MA_NOMI_RATE4 AND MSALDOAWAL < MA_NOMI_RATE5
          MRATE = MA_RATE4
       CASE MSALDOAWAL >= MA_NOMI_RATE5
          MRATE = MA_RATE5
       ENDCASE 
    ENDIF 
    IF MRATEKHUSUS = 'Y'
       MRATE = MRATESIMP
    ENDIF 
    MRATE = IIF(ISNULL(MRATE),0,MRATE)
    MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK/100)
    IF MSALDOAWAL <= MBATASBUNGA
       MRATE = 0
    ENDIF 
    
    MBUNGA = ROUND(((MSALDOAWAL *MRATE)/1200),0)
    mbunga = 0
   * MBUNGA = MSALDOAWAL * (MHARI / 365) * (MRATE / 100)
    MPJKBG = 0
    IF MSALDOAWAL > IIF(ISNULL(MBATASPAJAK),0,MBATASPAJAK)
       MPJKBG = MBUNGA * (MPJK / 100)
    ENDIF 
    JUMBUNGA = JUMBUNGA + SBUNGA + mbunga
          IF JUMBUNGA > 240000
             JUMPAJAK = ROUND(JUMBUNGA * mpjk,0)
          ENDIF 
     *     ? JUMBUNGA
     *     ?JUMPAJAK
   
   * MSALDOAWAL = SALDO
    
    MBUKTI = 'KEDUA '
*!*	    SELECT (MCURSOR)
*!*	    APPEND BLANK
*!*	    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH MBUKTI , DEBET WITH 0
*!*	    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH MHARI
*!*	    REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
    SELECT (MCURSOR)
    
 ENDCASE 
 IF MKIRIM = 'T'
    SELECT (MCURSOR)
    USE 
 ENDIF 
 SELECT (OLDSELE)
 MRET = ALLTRIM(STR(JUMBUNGA)) + '|' + ALLTRIM(STR(JUMPAJAK))+'#'+ALLTRIM(STR(MSALDOAWAL)+'>'+ALLTRIM(xket))
*!*	  IF MNOREK='00011641'
*!*	     MESSAGEBOX(MRET)
*!*	   *  return
*!*	  ENDIF

 RETURN MRET
ENDPROC

*----
 * perhitungan sblm perubahan tgl 30 april
PROCEDURE orilistjasa
 LPARAMETER MNOMORREK , TGLHIT , MKIRIM , MCURSOR
 LOCAL XKODE , XNOREK , TGLDAFTAR , JUMBUNGA , JUMPAJAK
 STORE 0 TO JUMBUNGA , JUMPAJAK
   
*!*	   IF mnorek='00005477'
*!*		 MESSAGEBOX(tglhit)
*!*	   ENDIF
   	
 OLDSELE = SELECT()
 IF VARTYPE(MCURSOR) = 'X' .OR. VARTYPE(MCURSOR) = 'L'
    MCURSOR = 'BUNGA'
 ENDIF 
  CREATE CURSOR &mCursor (tanggal d, bukti c(10),debet n(12),kredit n(12),saldo n(12),hari n(3),rate n(5,2), bunga n(12),pajak n(12),ket c(20))
 * cek nuilai
*!*	  MESSAGEBOX(mnomorrek)
*!*	  MESSAGEBOX(VARTYPE(mnomorrek))
 
 IF VARTYPE(MNOMORREK) = 'X'
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(TGLHIT) = 'X' .OR. VARTYPE(TGLHIT) = 'L'
    TGLHIT = TGLNOW
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(MKIRIM) = 'X' .OR. VARTYPE(MKIRIM) = 'L'
    MKIRIM = 'T'
 ENDIF 
 XNOREK = MNOMORREK
 CSQL =  ;
      'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
"simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
MNOMORREK + "' and b.iddata=(" +  ;
"select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "' and tanggal<'" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 IF LCEK < 1
     MESSAGEBOX(CSQL)
    
 ENDIF
 
 
* xsaldo di tutup dulu karena   
* MSALDOAWAL = IIF(SALDO=0,xsaldo,saldo)
msaldoawal = saldo

  
*!*	 
 MTGLBUKA = TGLBUKA
 IF RECCOUNT() = 0
    CSQL =  ;
         'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
   "simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
   MNOMORREK + "' and b.iddata=(" +  ;
   "select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "' )"
   
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MSALDOAWAL = 0
    MTGLBUKA = TGLBUKA
 ENDIF 
 IF NOREK <> MNOMORREK
    USE 
    SELECT (OLDSELE)
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF
 
*!*	   IF norek='00002083'
*!*			 MESSAGEBOX('setelah mak id'+TRANSFORM(msaldoawal,'999,999,999')) 
*!*	   ENDIF
 
 
  
 MRATEKHUSUS = IIF(RATE_KHUSUS = 'Y','Y','T')
 MRATESIMP = RATE
 MNOREK = NOREK
 MPRODUK = PRODUK
 MTGLTUTUP = TGLTUTUP
 MJENIS = JENIS
 
 USE 
*!*	 
*!*	 IF  .NOT. EMPTY(MTGLTUTUP) AND MTGLTUTUP < TGLHIT
*!*	   MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
*!*	    RETURN MRET
*!*	 ENDIF 
 
 CSQL =  ;
      "select * from setsandi_tab where jenis='" + MJENIS + "' and sandi='" + MPRODUK + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 
*BROWSE
 
*MESSAGEBOX('JENS '+MJENIS+' SANDI '+MPRODUK)

 MOPTPASIF = OPTPASIF
 MHARIPASIF = HARIPASIF
 MNOMIPASIF = NOMIPASIF
 XVER = VER
 XPAJAK = 0.1
 MOPTHARI = OPTHARI
 MA_RATE = A_RATE
 MA_RATE1 = A_RATE1
 MA_RATE2 = A_RATE2
 MA_RATE3 = A_RATE3
 MA_RATE4 = A_RATE4
 MA_RATE5 = A_RATE5
 MA_NOMI_RATE1 = A_NOMI_RATE1
 MA_NOMI_RATE2 = A_NOMI_RATE2
 MA_NOMI_RATE3 = A_NOMI_RATE3
 MA_NOMI_RATE4 = A_NOMI_RATE4
 MA_NOMI_RATE5 = A_NOMI_RATE5
 MA_TYPE_RATE = A_TYPE_RATE
 MP_RATE = P_RATE
 MP_RATE1 = P_RATE1
 MP_RATE2 = P_RATE2
 MP_RATE3 = P_RATE3
 MP_RATE4 = P_RATE4
 MP_RATE5 = P_RATE5
 MP_NOMI_RATE1 = P_NOMI_RATE1
 MP_NOMI_RATE2 = P_NOMI_RATE2
 MP_NOMI_RATE3 = P_NOMI_RATE3
 MP_NOMI_RATE4 = P_NOMI_RATE4
 MP_NOMI_RATE5 = P_NOMI_RATE5
 MP_TYPE_RATE = P_TYPE_RATE
 MANTARBANK = ANTARBANK
 MSALDOMINIMAL = SALDOMINIMAL
 MBATASBUNGA = BATASBUNGA
 MBATASPAJAK = BATASPAJAK
 MPAJAK = PAJAK
 MBUKTI = ''
 MRATE = A_RATE
 SBUNGA = 0
 
 
* mencari tgl mutasi terakhir
 CSQL =  ;
      "select MAX(tanggal) as tglmutasi from simpanan_mutasi where norek='" + MNOREK +  ;
"' and tanggal<'" + SQLDATE(AWALBLN(TGLHIT)) + "'  and kode='" + DEFATABSTOR +  ;
"' "
 LCEK = SQLEXEC(OODBC,CSQL,'smt')
 MTGLMUTASI = TGLMUTASI
 
* melihat mutasi dalam sebulan yg mau di hitung jasanya 
 
 CSQL =  ;
      "select * from simpanan_mutasi where norek='" + MNOREK + "' and tanggal>='" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "'  and tanggal<='" + SQLDATE(AKHIRBLN(TGLHIT)) +  ;
"' order by tanggal"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 

 xket =SPACE(60)
 
 
 DO CASE 
 CASE XVER = 2 .OR. XVER = 4

    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    SBUNGA = (mSALDOAWAL * MRATE)/1200
    
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE BUKTI WITH " SLD AWAL " , TANGGAL WITH MTGLHIT , SALDO WITH mSALDOAWAL, BUNGA WITH SBUNGA
    SELECT SMT
    GO TOP
   * browse
   * MBUNGA = 0

    XKET =SPACE(60)
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    DO WHILE  .NOT. EOF()
       IF TANGGAL > TGLHIT
          EXIT 
       ENDIF 
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
       IF TANGGAL >= AWALBLN(TGLHIT)
          MTANGGAL = TANGGAL
          MBUKTI = BUKTI
          MDEBET = DEBET
          MKREDIT = KREDIT
          MSALDO = IIF(ISNULL(SALDO),0,SALDO)
          MHARI = TANGGAL - MTGLTRANS

          
          IF MRATEKHUSUS = 'Y'
             MRATE = MRATESIMP
          ENDIF 
          MRATE = IIF(ISNULL(MRATE),0,MRATE)
          MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK)
          IF MSALDOAWAL <= MBATASBUNGA AND MBATASBUNGA > 0
             MRATE = 0
          ENDIF 
          IF MKREDIT<> 0
                do case
                  case day(mtanggal) <= 10
                    mbunga = round(((mkredit * mrate)/1200),0)
         *         case day(mtgltrans)>10 .and. day(mtanggal)<=20
                  case day(mtanggal)>10 .and. day(mtanggal)<=20
                    mbunga = round(((mkredit * mrate)/1200)*0.5,0)
                    xket =alltrim(xket)+ 'str-'+trans(day(mtanggal),'99')+' Rp.'+trans(mkredit,'999,999,999')
                  other
                    mbunga =0
                endcase

          ENDIF
          IF MDEBET <> 0
          do case
                   case day(mtanggal) <= 14
                        mbunga = round( ( (mdebet*mrate)/1200) *-1,0)
*                   case day(mtgltrans)>14 .and. day(mtanggal)<25
                   case day(mtanggal)>14 .and. day(mtanggal)<25

                        mbunga = round( ( (mdebet*mrate)/1200) *-0.5,0)
                        xket =alltrim(xket)+ 'amb-'+trans(day(mtanggal),'99')+' Rp.'+trans(mdebet,'999,999,999')
                   other
                       mbunga =0
                endcase
          ENDIF
             
          *MBUNGA = ROUND(MSALDOAWAL * (MHARI / 365) * (MRATE / 100),0)
*          MBUNGA = (MSALDOAWAL * MRATE)/1200
          MPJKBG = 0


          JUMBUNGA = JUMBUNGA + MBUNGA
          JUMPAJAK = JUMPAJAK + MPJKBG
          MTGLTRANS = TANGGAL
          MSALDOAWAL = SALDO
          
          
          MBUKTI = ' AWAL '
          SELECT (MCURSOR)
          APPEND BLANK
          REPLACE TANGGAL WITH MTGLTRANS , BUKTI WITH MBUKTI , DEBET WITH MDEBET
          REPLACE KREDIT WITH MKREDIT , SALDO WITH MSALDOAWAL , HARI WITH MHARI
          REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
       ELSE 
          MSALDOAWAL = SALDO
       ENDIF 
       SELECT SMT
       SKIP 
    ENDDO 
  

    MHARI = TGLHIT - MTGLTRANS
    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND MSALDOAWAL < MNOMIPASIF
       DO CASE 
       CASE MSALDOAWAL < MP_NOMI_RATE1 .OR. MP_NOMI_RATE1 = 0
          MRATE = MP_RATE
       CASE MSALDOAWAL >= MP_NOMI_RATE1 AND MSALDOAWAL < MP_NOMI_RATE2
          MRATE = MP_RATE1
       CASE MSALDOAWAL >= MP_NOMI_RATE2 AND MSALDOAWAL < MP_NOMI_RATE3
          MRATE = MP_RATE2
       CASE MSALDOAWAL >= MP_NOMI_RATE3 AND MSALDOAWAL < MP_NOMI_RATE4
          MRATE = MP_RATE3
       CASE MSALDOAWAL >= MP_NOMI_RATE4 AND MSALDOAWAL < MP_NOMI_RATE5
          MRATE = MP_RATE4
       CASE MSALDOAWAL >= MP_NOMI_RATE5
          MRATE = MP_RATE5
       ENDCASE 
    ELSE 
       DO CASE 
       CASE MSALDOAWAL < MA_NOMI_RATE1 .OR. MA_NOMI_RATE1 = 0
          MRATE = MA_RATE
       CASE MSALDOAWAL >= MA_NOMI_RATE1 AND MSALDOAWAL < MA_NOMI_RATE2
          MRATE = MA_RATE1
       CASE MSALDOAWAL >= MA_NOMI_RATE2 AND MSALDOAWAL < MA_NOMI_RATE3
          MRATE = MA_RATE2
       CASE MSALDOAWAL >= MA_NOMI_RATE3 AND MSALDOAWAL < MA_NOMI_RATE4
          MRATE = MA_RATE3
       CASE MSALDOAWAL >= MA_NOMI_RATE4 AND MSALDOAWAL < MA_NOMI_RATE5
          MRATE = MA_RATE4
       CASE MSALDOAWAL >= MA_NOMI_RATE5
          MRATE = MA_RATE5
       ENDCASE 
    ENDIF 
    IF MRATEKHUSUS = 'Y'
       MRATE = MRATESIMP
    ENDIF 
    MRATE = IIF(ISNULL(MRATE),0,MRATE)
    MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK)
    IF MSALDOAWAL <= MBATASBUNGA
       MRATE = 0
    ENDIF 
    
    MBUNGA = ROUND(((MSALDOAWAL *MRATE)/1200),0)
    mbunga = 0
   * MBUNGA = MSALDOAWAL * (MHARI / 365) * (MRATE / 100)
    MPJKBG = 0
    IF MSALDOAWAL > IIF(ISNULL(MBATASPAJAK),0,MBATASPAJAK)
       MPJKBG = MBUNGA * (MPJK / 100)
    ENDIF 
    JUMBUNGA = JUMBUNGA + SBUNGA + mbunga
          IF JUMBUNGA > 240000
             JUMPAJAK = ROUND(JUMBUNGA * (10 / 100),0)
          ENDIF 
     *     ? JUMBUNGA
     *     ?JUMPAJAK
   
   * MSALDOAWAL = SALDO
    
    MBUKTI = 'KEDUA '
*!*	    SELECT (MCURSOR)
*!*	    APPEND BLANK
*!*	    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH MBUKTI , DEBET WITH 0
*!*	    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH MHARI
*!*	    REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
    SELECT (MCURSOR)
    
 ENDCASE 
 IF MKIRIM = 'T'
    SELECT (MCURSOR)
    USE 
 ENDIF 
 SELECT (OLDSELE)
 MRET = ALLTRIM(STR(JUMBUNGA)) + '|' + ALLTRIM(STR(JUMPAJAK))+'#'+ALLTRIM(STR(MSALDOAWAL)+'>'+ALLTRIM(xket))
*!*	  IF MNOREK='00011641'
*!*	     MESSAGEBOX(MRET)
*!*	   *  return
*!*	  ENDIF

 RETURN MRET
ENDPROC

*------

*------
PROCEDURE cekAktif
 LPARAMETER MNOREK , MTANGGAL
 LOCAL OLDSELECT , VSALDO , VTGLMUTASI , VAKTIF
 OLDSELECT = SELECT()
 CSQL = "select produk from simpanan where norek='" + MNOREK + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'CEK1')
 MPRODUK = PRODUK
 CSQL =  ;
      'select saldo from simpanan_mutasi where iddata=(select MAX(iddata) from simpanan_mutasi where ' +  ;
"norek='" + MNOREK + "' and tanggal<='" + SQLDATE(MTANGGAL) +  ;
"' group by norek)"
 LCEK = SQLEXEC(OODBC,CSQL,'CEK1')
 VSALDO = SALDO
 CSQL =  ;
      'select tanggal from simpanan_mutasi where iddata=(select MAX(iddata) from simpanan_mutasi where ' +  ;
"norek='" + MNOREK + "' and tanggal<='" +  ;
SQLDATE(MTANGGAL) + "' and " + "(kode='" + DEFATABSTOR + "' or kode='" + DEFATABAMB +  ;
"' or kode='" + DEFATABPBK + "' ) group by norek)"
 LCEK = SQLEXEC(OODBC,CSQL,'CEK1')
 VTGLMUTASI = TANGGAL
 VAKTIF = 'Y'
 CSQL = "select * from setsandi_tab where sandi='" + MPRODUK + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'CEK1')
 DO CASE 
 CASE OPTPASIF = 1
    IF HARIPASIF < MTANGGAL - VTGLMUTASI
       VAKTIF = 'T'
    ENDIF 
 CASE OPTPASIF = 2
    IF NOMIPASIF < VSALDO
       VAKTIF = 'T'
    ENDIF 
 CASE OPTPASIF = 3
    IF HARIPASIF < MTANGGAL - VTGLMUTASI AND NOMIPASIF < VSALDO
       VAKTIF = 'T'
    ENDIF 
 ENDCASE 
 USE 
 SELECT (OLDSELECT)
 RETURN VAKTIF
ENDPROC

*------
PROCEDURE listbunga
 LPARAMETER MNOMORREK , TGLHIT , MKIRIM , MCURSOR
 LOCAL XKODE , XNOREK , TGLDAFTAR , JUMBUNGA , JUMPAJAK
 STORE 0 TO JUMBUNGA , JUMPAJAK
 OLDSELE = SELECT()
 IF VARTYPE(MCURSOR) = 'X' .OR. VARTYPE(MCURSOR) = 'L'
    MCURSOR = 'BUNGA'
 ENDIF 
  CREATE CURSOR &mCursor (tanggal d, bukti c(10),debet n(12),kredit n(12),saldo n(12),hari n(3),rate n(5,2), bunga n(12),pajak n(12))
 IF VARTYPE(MNOMORREK) = 'X'
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(TGLHIT) = 'X' .OR. VARTYPE(TGLHIT) = 'L'
    TGLHIT = TGLNOW
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 IF VARTYPE(MKIRIM) = 'X' .OR. VARTYPE(MKIRIM) = 'L'
    MKIRIM = 'T'
 ENDIF 
 XNOREK = MNOMORREK
 CSQL =  ;
      'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
"simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
MNOMORREK + "' and b.iddata=(" +  ;
"select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "' and tanggal<='" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 IF LCEK < 1
     MESSAGEBOX(CSQL)
 ENDIF 
 MSALDOAWAL = IIF(ISNULL(SALDO),0,SALDO)
 MTGLBUKA = TGLBUKA
 IF RECCOUNT() = 0
    CSQL =  ;
         'select a.tanggal as tglbuka,a.norek,a.jenis,a.produk,a.tgltutup,b.saldo,rate_khusus,rate from simpanan as a, ' +  ;
   "simpanan_mutasi as b where a.norek=b.norek and a.norek='" +  ;
   MNOMORREK + "' and b.iddata=(" +  ;
   "select MAX(iddata) from simpanan_mutasi where norek='" + MNOMORREK + "')"
    LCEK = SQLEXEC(OODBC,CSQL,'SMT')
    MSALDOAWAL = 0
    MTGLBUKA = TGLBUKA
 ENDIF 
 IF NOREK <> MNOMORREK
    USE 
    SELECT (OLDSELE)
    MRET = ALLTRIM(STR(0)) + '|' + ALLTRIM(STR(0))
    RETURN MRET
 ENDIF 
 MRATEKHUSUS = IIF(RATE_KHUSUS = 'Y','Y','T')
 MRATESIMP = RATE
 MNOREK = NOREK
 MPRODUK = PRODUK
 MTGLTUTUP = TGLTUTUP
 MJENIS = JENIS
 USE 
 IF  .NOT. EMPTY(MTGLTUTUP) AND MTGLTUTUP < TGLHIT
    RETURN 0
 ENDIF 
 CSQL =  ;
      "select * from setsandi_tab where jenis='" + MJENIS + "' and sandi='" + MPRODUK +  ;
"'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 MOPTPASIF = OPTPASIF
 MHARIPASIF = HARIPASIF
 MNOMIPASIF = NOMIPASIF
 XVER = VER
 MOPTHARI = OPTHARI
 MA_RATE = A_RATE
 MA_RATE1 = A_RATE1
 MA_RATE2 = A_RATE2
 MA_RATE3 = A_RATE3
 MA_RATE4 = A_RATE4
 MA_RATE5 = A_RATE5
 MA_NOMI_RATE1 = A_NOMI_RATE1
 MA_NOMI_RATE2 = A_NOMI_RATE2
 MA_NOMI_RATE3 = A_NOMI_RATE3
 MA_NOMI_RATE4 = A_NOMI_RATE4
 MA_NOMI_RATE5 = A_NOMI_RATE5
 MA_TYPE_RATE = A_TYPE_RATE
 MP_RATE = P_RATE
 MP_RATE1 = P_RATE1
 MP_RATE2 = P_RATE2
 MP_RATE3 = P_RATE3
 MP_RATE4 = P_RATE4
 MP_RATE5 = P_RATE5
 MP_NOMI_RATE1 = P_NOMI_RATE1
 MP_NOMI_RATE2 = P_NOMI_RATE2
 MP_NOMI_RATE3 = P_NOMI_RATE3
 MP_NOMI_RATE4 = P_NOMI_RATE4
 MP_NOMI_RATE5 = P_NOMI_RATE5
 MP_TYPE_RATE = P_TYPE_RATE
 MANTARBANK = ANTARBANK
 MSALDOMINIMAL = SALDOMINIMAL
 MBATASBUNGA = BATASBUNGA
 MBATASPAJAK = BATASPAJAK
 MPAJAK = PAJAK
 MBUKTI = ''
 CSQL =  ;
      "select MAX(tanggal) as tglmutasi from simpanan_mutasi where norek='" + MNOREK +  ;
"' and tanggal<'" + SQLDATE(AWALBLN(TGLHIT)) + "'  and kode='" + DEFATABSTOR +  ;
"' "
 LCEK = SQLEXEC(OODBC,CSQL,'smt')
 MTGLMUTASI = TGLMUTASI
 CSQL =  ;
      "select * from simpanan_mutasi where norek='" + MNOREK + "' and tanggal>='" +  ;
SQLDATE(AWALBLN(TGLHIT)) + "'  and tanggal<'" + SQLDATE(AKHIRBLN(TGLHIT)) +  ;
"' order by tanggal"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
* MESSAGEBOX(xver)

 DO CASE 
  CASE XVER = 1
    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XTOTPJK = 0
    XTOTBG = 0
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE TANGGAL WITH MTGLHIT , SALDO WITH MSALDOAWAL
    SELECT SMT
    GO TOP
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XTGLMTS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XSLDAWAL = IIF(MTGLBUKA < AWALBLN(TGLHIT),MSALDOAWAL,0)
    XSISA = MSALDOAWAL
    XBUNGA = 0
    P = IIF(XSLDAWAL >= MBATASPAJAK,.T.,.F.)
    XMIN = MSALDOAWAL
  *  MESSAGEBOX(norek)
    DO WHILE  .NOT. EOF()
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
      * XMIN = IIF(SALDO < XMIN,SALDO,XMIN)
       xmin = saldo
       MTANGGAL = TANGGAL
       MBUKTI = BUKTI
       MDEBET = DEBET
       MKREDIT = KREDIT
       MSISA = SALDO
       XSLDAKHIR = SALDO
       IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND XMIN < MNOMIPASIF
          XBG = MA_RATE
       ELSE 
          XBG = MP_RATE
       ENDIF 
       SELECT (MCURSOR)
       APPEND BLANK
       REPLACE TANGGAL WITH MTANGGAL , BUKTI WITH MBUKTI , DEBET WITH MDEBET
       REPLACE KREDIT WITH MKREDIT , SALDO WITH MSISA , HARI WITH 0
       REPLACE RATE WITH XBG , BUNGA WITH 0 , PAJAK WITH 0
       SELECT SMT
       P = IIF(MSISA >= MBATASPAJAK,.T.,P)
       SKIP 
    ENDDO 
*!*	    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND XMIN < MNOMIPASIF
*!*	      
*!*	    ELSE 
*!*	       XBG = MP_RATE
*!*	    ENDIF 
     XBG = MA_RATE
    IF XMIN >= MBATASBUNGA
       XTOTBG = ROUND(xmin * (XBG / 1200),0)
    ELSE 
       XTOTBG = 0
    ENDIF 
    IF XMIN > MBATASPAJAK
       XTOTPJK = ((MPAJAK) / 100) * XTOTBG
    ELSE 
    ENDIF 
*!*	    IF xmin <>0
*!*	       MESSAGEBOX(mnorek +'saldo: '+TRANSFORM(xmin,'999,999,999')+' % : '+TRANSFORM(xbg,'99.99')+' jasa : '+TRANSFORM(XTOTBG,'999,999,999'))
*!*	       return
*!*	    endif
 
    
    JUMBUNGA = JUMBUNGA + XTOTBG
    JUMPAJAK = JUMPAJAK + XTOTPJK
    SELECT (MCURSOR)
    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH '' , DEBET WITH 0
    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH 0
    REPLACE RATE WITH XBG , BUNGA WITH XTOTBG , PAJAK WITH XTOTPJK
   
   ** awalnya untuk 1 dan 4 di hanti 4 saja
 CASE  XVER = 4   
    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE TANGGAL WITH MTGLHIT , SALDO WITH MSALDOAWAL
    SELECT SMT
    GO TOP
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    DO WHILE  .NOT. EOF()
       IF TANGGAL > TGLHIT
          EXIT 
       ENDIF 
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
       IF TANGGAL >= AWALBLN(TGLHIT)
          MTANGGAL = TANGGAL
          MBUKTI = BUKTI
          MDEBET = DEBET
          MKREDIT = KREDIT
          MSALDO = IIF(ISNULL(SALDO),0,SALDO)
          MHARI = TANGGAL - MTGLTRANS
          
          IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND MSALDOAWAL < MNOMIPASIF
             DO CASE 
             CASE MSALDOAWAL < MP_NOMI_RATE1 .OR. MP_NOMI_RATE1 = 0
                MRATE = MP_RATE
             CASE MSALDOAWAL >= MP_NOMI_RATE1 AND MSALDOAWAL < MP_NOMI_RATE2
                MRATE = MP_RATE1
             CASE MSALDOAWAL >= MP_NOMI_RATE2 AND MSALDOAWAL < MP_NOMI_RATE3
                MRATE = MP_RATE2
             CASE MSALDOAWAL >= MP_NOMI_RATE3 AND MSALDOAWAL < MP_NOMI_RATE4
                MRATE = MP_RATE3
             CASE MSALDOAWAL >= MP_NOMI_RATE4 AND MSALDOAWAL < MP_NOMI_RATE5
                MRATE = MP_RATE4
             CASE MSALDOAWAL >= MP_NOMI_RATE5
                MRATE = MP_RATE5
             ENDCASE 
          ELSE 
             DO CASE 
             CASE MSALDOAWAL < MA_NOMI_RATE1 .OR. MA_NOMI_RATE1 = 0
                MRATE = MA_RATE
             CASE MSALDOAWAL >= MA_NOMI_RATE1 AND MSALDOAWAL < MA_NOMI_RATE2
                MRATE = MA_RATE1
             CASE MSALDOAWAL >= MA_NOMI_RATE2 AND MSALDOAWAL < MA_NOMI_RATE3
                MRATE = MA_RATE2
             CASE MSALDOAWAL >= MA_NOMI_RATE3 AND MSALDOAWAL < MA_NOMI_RATE4
                MRATE = MA_RATE3
             CASE MSALDOAWAL >= MA_NOMI_RATE4 AND MSALDOAWAL < MA_NOMI_RATE5
                MRATE = MA_RATE4
             CASE MSALDOAWAL >= MA_NOMI_RATE5
                MRATE = MA_RATE5
             ENDCASE 
          ENDIF 
          IF MRATEKHUSUS = 'Y'
             MRATE = MRATESIMP
          ENDIF 
          MRATE = IIF(ISNULL(MRATE),0,MRATE)
          MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK)
          IF MSALDOAWAL <= MBATASBUNGA AND MBATASBUNGA > 0
             MRATE = 0
          ENDIF 
          MBUNGA = ROUND(MSALDOAWAL * (MHARI / 365) * (MRATE / 100),0)
          MPJKBG = 0
          IF MSALDOAWAL > IIF(ISNULL(MBATASPAJAK),0,MBATASPAJAK)
             MPJKBG = ROUND(MBUNGA * (MPJK / 100),0)
          ENDIF 
          JUMBUNGA = JUMBUNGA + MBUNGA
          JUMPAJAK = JUMPAJAK + MPJKBG
          MTGLTRANS = TANGGAL
          MSALDOAWAL = SALDO
          SELECT (MCURSOR)
          APPEND BLANK
          REPLACE TANGGAL WITH MTGLTRANS , BUKTI WITH MBUKTI , DEBET WITH MDEBET
          REPLACE KREDIT WITH MKREDIT , SALDO WITH MSALDOAWAL , HARI WITH MHARI
          REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
       ELSE 
          MSALDOAWAL = SALDO
       ENDIF 
       SELECT SMT
       SKIP 
    ENDDO 
    MHARI = TGLHIT - MTGLTRANS
    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND MSALDOAWAL < MNOMIPASIF
       DO CASE 
       CASE MSALDOAWAL < MP_NOMI_RATE1 .OR. MP_NOMI_RATE1 = 0
          MRATE = MP_RATE
       CASE MSALDOAWAL >= MP_NOMI_RATE1 AND MSALDOAWAL < MP_NOMI_RATE2
          MRATE = MP_RATE1
       CASE MSALDOAWAL >= MP_NOMI_RATE2 AND MSALDOAWAL < MP_NOMI_RATE3
          MRATE = MP_RATE2
       CASE MSALDOAWAL >= MP_NOMI_RATE3 AND MSALDOAWAL < MP_NOMI_RATE4
          MRATE = MP_RATE3
       CASE MSALDOAWAL >= MP_NOMI_RATE4 AND MSALDOAWAL < MP_NOMI_RATE5
          MRATE = MP_RATE4
       CASE MSALDOAWAL >= MP_NOMI_RATE5
          MRATE = MP_RATE5
       ENDCASE 
    ELSE 
       DO CASE 
       CASE MSALDOAWAL < MA_NOMI_RATE1 .OR. MA_NOMI_RATE1 = 0
          MRATE = MA_RATE
       CASE MSALDOAWAL >= MA_NOMI_RATE1 AND MSALDOAWAL < MA_NOMI_RATE2
          MRATE = MA_RATE1
       CASE MSALDOAWAL >= MA_NOMI_RATE2 AND MSALDOAWAL < MA_NOMI_RATE3
          MRATE = MA_RATE2
       CASE MSALDOAWAL >= MA_NOMI_RATE3 AND MSALDOAWAL < MA_NOMI_RATE4
          MRATE = MA_RATE3
       CASE MSALDOAWAL >= MA_NOMI_RATE4 AND MSALDOAWAL < MA_NOMI_RATE5
          MRATE = MA_RATE4
       CASE MSALDOAWAL >= MA_NOMI_RATE5
          MRATE = MA_RATE5
       ENDCASE 
    ENDIF 
    IF MRATEKHUSUS = 'Y'
       MRATE = MRATESIMP
    ENDIF 
    MRATE = IIF(ISNULL(MRATE),0,MRATE)
    MPJK = IIF(ISNULL(MPAJAK),0,MPAJAK)
    IF MSALDOAWAL <= MBATASBUNGA
       MRATE = 0
    ENDIF 
    MBUNGA = MSALDOAWAL * (MHARI / 365) * (MRATE / 100)
    MPJKBG = 0
    IF MSALDOAWAL > IIF(ISNULL(MBATASPAJAK),0,MBATASPAJAK)
       MPJKBG = MBUNGA * (MPJK / 100)
    ENDIF 
    JUMBUNGA = JUMBUNGA + MBUNGA
    JUMPAJAK = JUMPAJAK + MPJKBG
    MSALDOAWAL = SALDO
    SELECT (MCURSOR)

    APPEND BLANK
    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH MBUKTI , DEBET WITH 0
    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH MHARI
    REPLACE RATE WITH MRATE , BUNGA WITH MBUNGA , PAJAK WITH MPJKBG
    SELECT (MCURSOR)
 CASE XVER = 2
    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE TANGGAL WITH MTGLHIT , SALDO WITH MSALDOAWAL
    SELECT SMT
    GO TOP
    XBUNGA = 0
    MTOT = MSALDOAWAL
    XSISA = MSALDOAWAL
    MKE = 1
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    DO WHILE  .NOT. EOF()
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
       MHARI = TANGGAL - MTGLTRANS
       MTANGGAL = TANGGAL
       MBUKTI = BUKTI
       MDEBET = DEBET
       MKREDIT = KREDIT
       MSISA = SALDO
       SELECT (MCURSOR)
       APPEND BLANK
       REPLACE TANGGAL WITH MTANGGAL , BUKTI WITH MBUKTI , DEBET WITH MDEBET
       REPLACE KREDIT WITH MKREDIT , SALDO WITH MSISA , HARI WITH MHARI
       REPLACE RATE WITH MRATE , BUNGA WITH 0 , PAJAK WITH 0
       SELECT SMT
       MTGLTRANS = TANGGAL
       MTOT = MTOT + (XSISA * MHARI)
       XSISA = SALDO
       SKIP 
    ENDDO 
    MHARI = TGLHIT - MTGLTRANS
    MTOT = MTOT + (XSISA * MHARI)
    MRATA = ROUND(MTOT / (TGLHIT - MTGLBUKA),0)
    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND MRATA < MNOMIPASIF
       XBG = MA_RATE
    ELSE 
       XBG = MP_RATE
    ENDIF 
    IF MRATA >= MBATASBUNGA
       XTOTBG = MRATA * (XBG / 1200)
    ELSE 
       XTOTBG = 0
    ENDIF 
    IF MRATA > MBATASPAJAK
       XTOTPJK = ((MPAJAK) / 100) * XTOTBG
       BUNGA1 = BUNGA1 + XTOTBG
    ELSE 
       BUNGA0 = BUNGA0 + XTOTBG
    ENDIF 
    JUMBUNGA = JUMBUNGA + XTOTBG
    JUMPAJAK = JUMPAJAK + XTOTPJK
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH '' , DEBET WITH 0
    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH MHARI
    REPLACE RATE WITH MRATE , BUNGA WITH XTOTBG , PAJAK WITH XTOTPJK
 CASE XVER = 3
    MTGLHIT = MAX(AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XTOTPJK = 0
    XTOTBG = 0
    SELECT (MCURSOR)
    APPEND BLANK
    REPLACE TANGGAL WITH MTGLHIT , SALDO WITH MSALDOAWAL
    SELECT SMT
    GO TOP
    MTGLTRANS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XTGLMTS = IIF(MTGLBUKA < AWALBLN(TGLHIT),AWALBLN(TGLHIT) - 1,MTGLBUKA)
    XSLDAWAL = IIF(MTGLBUKA < AWALBLN(TGLHIT),MSALDOAWAL,0)
    XSISA = MSALDOAWAL
    XBUNGA = 0
    P = IIF(XSLDAWAL >= MBATASPAJAK,.T.,.F.)
    XMIN = MSALDOAWAL
    DO WHILE  .NOT. EOF()
       IF KODE = DEFATABSTOR
          MTGLMUTASI = TANGGAL
       ENDIF 
       XMIN = IIF(SALDO < XMIN,SALDO,XMIN)
       MTANGGAL = TANGGAL
       MBUKTI = BUKTI
       MDEBET = DEBET
       MKREDIT = KREDIT
       MSISA = SALDO
       XSLDAKHIR = SALDO
       IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND XMIN < MNOMIPASIF
          XBG = MA_RATE
       ELSE 
          XBG = MP_RATE
       ENDIF 
       SELECT (MCURSOR)
       APPEND BLANK
       REPLACE TANGGAL WITH MTANGGAL , BUKTI WITH MBUKTI , DEBET WITH MDEBET
       REPLACE KREDIT WITH MKREDIT , SALDO WITH MSISA , HARI WITH 0
       REPLACE RATE WITH XBG , BUNGA WITH 0 , PAJAK WITH 0
       SELECT SMT
       P = IIF(MSISA >= MBATASPAJAK,.T.,P)
       SKIP 
    ENDDO 
    IF MHARIPASIF > (TGLHIT - MTGLMUTASI) AND XMIN < MNOMIPASIF
       XBG = MA_RATE
    ELSE 
       XBG = MP_RATE
    ENDIF 
    IF XMIN >= MBATASBUNGA
       XTOTBG = ROUND(XMIN * (XBG / 1200),0)
    ELSE 
       XTOTBG = 0
    ENDIF 
    IF XMIN > MBATASPAJAK
       XTOTPJK = ((MPAJAK) / 100) * XTOTBG
    ELSE 
    ENDIF 
    JUMBUNGA = JUMBUNGA + XTOTBG
    JUMPAJAK = JUMPAJAK + XTOTPJK
    SELECT (MCURSOR)
    REPLACE TANGGAL WITH TGLHIT , BUKTI WITH '' , DEBET WITH 0
    REPLACE KREDIT WITH 0 , SALDO WITH MSALDOAWAL , HARI WITH 0
    REPLACE RATE WITH XBG , BUNGA WITH XTOTBG , PAJAK WITH XTOTPJK
 ENDCASE 
 IF MKIRIM = 'T'
    SELECT (MCURSOR)
    USE 
 ENDIF 
 SELECT (OLDSELE)
 MRET = ALLTRIM(STR(JUMBUNGA)) + '|' + ALLTRIM(STR(JUMPAJAK))
 RETURN MRET
ENDPROC

*------
PROCEDURE saldotab
 LPARAMETER MTGLCARI , MREKCARI
 TIME1 = TIME()
 MYTUNGGU = NEWOBJECT('tunggu')
  MYTUNGGU.SHOW()
  INKEY(0,01)
 CREATE CURSOR saldotab ( NOREK VARCHAR ( 17 ) , NAMA C ( 30 ) , ALAMAT C ( 30 ) ,  ;
      PRODUK VARCHAR ( 4 ) , TGLMASUK DATE , TANGGAL DATE , SALDOAWAL INT ( 10 ) ,  ;
      DEBET INT ( 10 ) , KREDIT INT ( 10 ) , BUNGA INT ( 10 ) , PAJAK INT  ;
      ( 10 ) , ADM INT ( 10 ) , SALDO INT ( 10 ) , TGLMUTASI DATE , TGLAKHIR  ;
      DATE )
 IF MREKCARI = 'ALL'
    CSQL =  ;
         'select norek,tanggal,bukti,kd,debet,kredit,sisa from tab_mutasi where norek is not null and tanggal<=?sqldate(mtglcari)'
    LCEK = SQLEXEC(OODBC,CSQL,'SLDTAB_MTS')
    CSQL =  ;
         "select a.norek,a.produk,a.tglmasuk, b.nama,b.alamat from tab_data a left join data_nasabah b on a.cif=b.cif where norek is not null and tglmasuk<=?sqldate(mtglcari) and (tgltutup='0000-00-00' or tgltutup<?sqldate(mtglcari))"
    LCEK = SQLEXEC(OODBC,CSQL,'SLDTAB_DT')
 ELSE 
    CSQL =  ;
         'select norek,tanggal,bukti,kd,debet,kredit,sisa from tab_mutasi where norek=?mrekcari and tanggal<=?sqldate(mtglcari)'
    LCEK = SQLEXEC(OODBC,CSQL,'SLDTAB_MTS')
    CSQL =  ;
         'select a.norek,a.produk,a.tglmasuk,b.nama,b.alamat from tab_data a left join data_nasabah b on a.cif=b.cif where norek=?mrekcari'
    LCEK = SQLEXEC(OODBC,CSQL,'SLDTAB_DT')
 ENDIF 
 SELECT SLDTAB_MTS
 INDEX ON NOREK + DTOS(TANGGAL) TAG TEST1
 SELECT SLDTAB_DT
  MYTUNGGU.RELEASE()
 MYPROSES = NEWOBJECT('proses')
  MYPROSES.MAXIMAL(RECCOUNT())
  MYPROSES.KE(0)
  MYPROSES.NAMA('Proses Hitung')
  MYPROSES.SHOW()
 GO TOP
 DO WHILE  .NOT. EOF()
     MYPROSES.KE(RECNO())
    IF  .NOT. EMPTY(NOREK)
       MNOREK = NOREK
       MPRODUK = IIF(VARTYPE(PRODUK) = 'X','',PRODUK)
       MTGLMASUK = TGLMASUK
       MSALDO = 0
       MNAMA = IIF(VARTYPE(NAMA) = 'X','',NAMA)
       MALAMAT = IIF(VARTYPE(ALAMAT) = 'X','',ALAMAT)
       MSALDOAWAL = 0
       MBUNGA = 0
       MPAJAK = 0
       MADM = 0
       MDEBET = 0
       MKREDIT = 0
       MTGLMAX = TGLMASUK
       MTGLAKHIR = TGLMASUK
       SELECT SLDTAB_MTS
       SET NEAR ON
       SET ORDER TO TEST1
       SEEK RTRIM(MNOREK)
       SET NEAR OFF
       DO WHILE  .NOT. EOF()
          IF NOREK <> MNOREK .OR. TANGGAL > MTGLCARI
             EXIT 
          ENDIF 
          MSALDOAKHIR = SISA
          IF TANGGAL < MTGLCARI
             MTGLMAX = TANGGAL
             MSALDOAWAL = SISA
             IF KD <> '05' AND KD <> '08' AND KD <> '09'
                MTGLAKHIR = TANGGAL
             ENDIF 
          ELSE 
             DO CASE 
             CASE KD = '05'
                MBUNGA = MBUNGA + (KREDIT - DEBET)
             CASE KD = '08'
                MPAJAK = MPAJAK + (DEBET - KREDIT)
             CASE KD = '09'
                MADM = MADM + (DEBET - KREDIT)
             OTHERWISE 
                MDEBET = MDEBET + DEBET
                MKREDIT = MKREDIT + KREDIT
             ENDCASE 
          ENDIF 
          SKIP 
       ENDDO 
       SELECT SALDOTAB
       APPEND BLANK
       REPLACE NOREK WITH MNOREK
       REPLACE PRODUK WITH MPRODUK
       REPLACE TGLMASUK WITH IIF(VARTYPE(MTGLMASUK) = 'X',CTOD('  -  -    '),MTGLMASUK)
       REPLACE TANGGAL WITH MTGLCARI
       REPLACE NAMA WITH MNAMA
       REPLACE ALAMAT WITH MALAMAT
       REPLACE SALDOAWAL WITH MSALDOAWAL
       REPLACE DEBET WITH MDEBET
       REPLACE KREDIT WITH MKREDIT
       REPLACE BUNGA WITH MBUNGA
       REPLACE PAJAK WITH MPAJAK
       REPLACE ADM WITH MADM
       REPLACE TGLMUTASI WITH MTGLAKHIR
       REPLACE TGLAKHIR WITH MTGLMAX
    ENDIF 
    SELECT SLDTAB_DT
    SKIP 
 ENDDO 
  MYPROSES.RELEASE()
 SELECT SLDTAB_MTS
 USE 
 SELECT SLDTAB_DT
 USE 
 SELECT SALDOTAB
 TIME2 = TIME()
 RETURN 
ENDPROC
*------
PROCEDURE justcek
 CSQL = 'select * from pinjaman'
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 DO WHILE  .NOT. EOF()
    MNOREK = NOREK
    MTGLREAL = TANGGAL
    MPOKOK = VAL(POKOK)
    MTGL = CTOD('01-01-' + ALLTRIM(STR(YEAR(TGLNOW))))
    CSQL =  ;
         "select SUM(pokok) as pk, SUM(jasa) as bg from pinjaman_mutasi where norek='" +  ;
   MNOREK + "' and tanggal<'" + SQLDATE(MTGL) + "'"
    LCEK = SQLEXEC(OODBC,CSQL,'SMT1')
    MPK = IIF(ISNULL(PK),0,PK)
    MSLDPOKOK = IIF(MTGLREAL < MTGL,MPOKOK - MPK,0)
    CSQL =  ;
         "update pinjaman set sldawalthn='" + STR(MSLDPOKOK) + "' where norek='" + MNOREK +  ;
   "'"
    LCEK = SQLEXEC(OODBC,CSQL)
    MTGL =  ;
         CTOD('01-' + ALLTRIM(STR(MONTH(TGLNOW))) + '-' + ALLTRIM(STR(YEAR(TGLNOW))))
    CSQL =  ;
         "select SUM(pokok) as pk, SUM(jasa) as bg from pinjaman_mutasi where norek='" +  ;
   MNOREK + "' and tanggal<'" + SQLDATE(MTGL) + "'"
    LCEK = SQLEXEC(OODBC,CSQL,'SMT1')
    MPK = IIF(ISNULL(PK),0,PK)
    MSLDPOKOK = IIF(MTGLREAL < MTGL,MPOKOK - MPK,0)
    CSQL =  ;
         "update pinjaman set sldawalbln='" + STR(MSLDPOKOK) + "' where norek='" + MNOREK +  ;
   "'"
    LCEK = SQLEXEC(OODBC,CSQL)
    MTGL = TGLNOW - 1
    CSQL =  ;
         "select SUM(pokok) as pk, SUM(jasa) as bg from pinjaman_mutasi where norek='" +  ;
   MNOREK + "' and tanggal<'" + SQLDATE(MTGL) + "'"
    LCEK = SQLEXEC(OODBC,CSQL,'SMT1')
    MPK = IIF(ISNULL(PK),0,PK)
    MSLDPOKOK = IIF(MTGLREAL < MTGL,MPOKOK - MPK,0)
    CSQL =  ;
         "update pinjaman set sldawalhr='" + STR(MSLDPOKOK) + "' where norek='" + MNOREK +  ;
   "'"
    LCEK = SQLEXEC(OODBC,CSQL)
    MTGL = TGLNOW
    CSQL =  ;
         "select SUM(pokok) as pk, SUM(jasa) as bg from pinjaman_mutasi where norek='" +  ;
   MNOREK + "' and tanggal<'" + SQLDATE(MTGL) + "'"
    LCEK = SQLEXEC(OODBC,CSQL,'SMT1')
    MPK = IIF(ISNULL(PK),0,PK)
    MSLDPOKOK = IIF(MTGLREAL <= MTGL,MPOKOK - MPK,0)
    CSQL =  ;
         "update pinjaman set sldsekarang='" + STR(MSLDPOKOK) + "' where norek='" + MNOREK +  ;
   "'"
    LCEK = SQLEXEC(OODBC,CSQL)
    SELECT SMT
    SKIP 
 ENDDO 
 RETURN 
ENDPROC
*------
PROCEDURE JurnalAntarKantor
 PARAMETER MTANGGAL , MBUKTI , MKET , KANTOR1 , KANTOR2 , MJUMLAH
 CSQL =  ;
      "select saldo from neraca where kantor='" + KANTOR1 + "' and noper='" +  ;
ALLTRIM(DEFANOPERAKA) + KANTOR2 +  ;
"' and tanggal=(select MAX(tanggal) from neraca where kantor='" + KANTOR1 + "' and noper='" + ALLTRIM(DEFANOPERAKA) + KANTOR2 +  ;
"')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 SALDO1 = SALDO
 IF SALDO1 > 0
    CSQL =  ;
         'insert into jurnal (kantor,tanggal,bukti,noper,keterangan,jumlah) values '
    CSQL =  ;
         CSQL + "('" + KANTOR2 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKA) + KANTOR2 + "'," + "'" + MKET + "','" +  ;
   ALLTRIM(STR(MJUMLAH)) + "'), "
    CSQL =  ;
         CSQL + "('" + KANTOR1 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKP) + KANTOR1 + "'," + "'" + MKET + "','" +  ;
   ALLTRIM(STR(0 - MJUMLAH)) + "'), "
    CSQL = ALLTRIM(CSQL)
    CSQL = LEFT(CSQL,LEN(CSQL) - 1)
    LCEK = SQLEXEC(OODBC,CSQL)
 ELSE 
    CSQL =  ;
         'insert into jurnal (kantor,tanggal,bukti,noper,keterangan,jumlah) values '
    CSQL =  ;
         CSQL + "('" + KANTOR1 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKP) + KANTOR2 + "'," + "'" + MKET + "','" +  ;
   ALLTRIM(STR(0 - MJUMLAH)) + "'), "
    CSQL =  ;
         CSQL + "('" + KANTOR2 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKA) + KANTOR1 + "'," + "'" + MKET + "','" +  ;
   ALLTRIM(STR(MJUMLAH)) + "'), "
    CSQL = ALLTRIM(CSQL)
    CSQL = LEFT(CSQL,LEN(CSQL) - 1)
    LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 CSQL =  ;
      "select saldo from neraca where kantor='" + KANTOR1 + "' and noper='" +  ;
ALLTRIM(DEFANOPERAKA) + KANTOR2 +  ;
"' and tanggal=(select MAX(tanggal) from neraca where kantor='" + KANTOR1 + "' and noper='" + ALLTRIM(DEFANOPERAKA) + KANTOR2 +  ;
"')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 SALDO1 = SALDO
 CSQL =  ;
      "select saldo from neraca where kantor='" + KANTOR1 + "' and noper='" +  ;
ALLTRIM(DEFANOPERAKP) + KANTOR2 +  ;
"' and tanggal=(select MAX(tanggal) from neraca where kantor='" + KANTOR1 + "' and noper='" + ALLTRIM(DEFANOPERAKP) + KANTOR2 +  ;
"')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 SALDO2 = SALDO
 IF SALDO1 <> 0 AND SALDO2 <> 0
    MADJ = 0 - SALDO2
    MADJ = IIF(MADJ > SALDO1,SALDO1,MADJ)
    CSQL =  ;
         'insert into jurnal (kantor,tanggal,bukti,noper,ket,jumlah) value (' + "'" +  ;
   KANTOR1 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKA) + KANTOR2 + "'," + "'" + MKET + "','" + STR(0 - MADJ) + "')," +  ;
   "('" + KANTOR1 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKP) + KANTOR2 + "'," + "'" + MKET + "','" + STR(MADJ) + "')"
    LCEK = SQLEXEC(OODBC,CSQL)
    SLDKANTOR1 = IIF(SALDO1 - MADJ = 0,SALDO2 - MADJ,SALDO1 - MADJ)
 ELSE 
    SLDKANTOR1 = SALDO1 + SALDO2
 ENDIF 
 CSQL =  ;
      "select saldo from neraca where kantor='" + KANTOR2 + "' and noper='" +  ;
ALLTRIM(DEFANOPERAKA) + KANTOR1 +  ;
"' and tanggal=(select MAX(tanggal) from neraca where kantor='" + KANTOR2 + "' and noper='" + ALLTRIM(DEFANOPERAKA) + KANTOR1 +  ;
"')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 SALDO1 = SALDO
 CSQL =  ;
      "select saldo from neraca where kantor='" + KANTOR2 + "' and noper='" +  ;
ALLTRIM(DEFANOPERAKP) + KANTOR1 +  ;
"' and tanggal=(select MAX(tanggal) from neraca where kantor='" + KANTOR2 + "' and noper='" + ALLTRIM(DEFANOPERAKP) + KANTOR1 +  ;
"')"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 SALDO2 = SALDO
 IF SALDO1 <> 0 AND SALDO2 <> 0
    MADJ = 0 - SALDO2
    MADJ = IIF(MADJ > SALDO1,SALDO1,MADJ)
    CSQL =  ;
         'insert into jurnal (kantor,tanggal,bukti,noper,ket,jumlah) value (' + "'" +  ;
   KANTOR2 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKA) + KANTOR1 + "'," + "'" + MKET + "','" + STR(0 - MADJ) + "')," +  ;
   "('" + KANTOR2 + "','" + SQLDATE(MTANGGAL) + "','" + MBUKTI + "','" +  ;
   ALLTRIM(DEFANOPERAKP) + KANTOR1 + "'," + "'" + MKET + "','" + STR(MADJ) + "')"
    LCEK = SQLEXEC(OODBC,CSQL)
    SLDKANTOR2 = IIF(SALDO1 - MADJ = 0,SALDO2 - MADJ,SALDO1 - MADJ)
 ELSE 
    SLDKANTOR2 = SALDO1 + SALDO2
 ENDIF 
  HITNERACA(KANTOR1,ALLTRIM(DEFANOPERAKA) + KANTOR1,MTANGGAL)
  HITNERACA(KANTOR1,ALLTRIM(DEFANOPERAKP) + KANTOR1,MTANGGAL)
  HITNERACA(KANTOR1,ALLTRIM(DEFANOPERAKA) + KANTOR2,MTANGGAL)
  HITNERACA(KANTOR1,ALLTRIM(DEFANOPERAKP) + KANTOR2,MTANGGAL)
  HITNERACA(KANTOR2,ALLTRIM(DEFANOPERAKA) + KANTOR1,MTANGGAL)
  HITNERACA(KANTOR2,ALLTRIM(DEFANOPERAKP) + KANTOR1,MTANGGAL)
  HITNERACA(KANTOR2,ALLTRIM(DEFANOPERAKA) + KANTOR2,MTANGGAL)
  HITNERACA(KANTOR2,ALLTRIM(DEFANOPERAKP) + KANTOR2,MTANGGAL)
 RETURN 
ENDPROC
*------
PROCEDURE pros_autodebet
 CSQL = 'select * from simpanan_autodebet where '
 RETURN 
ENDPROC
*------
PROCEDURE BuatRegister
 PARAMETER MNOMOR , MPROG , MASET , MTGL
 NKEY = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
 NKEY = 'ABC0DE1FG2HI3JK4LM5NO6PQ7RS8TU9VWXYZ'
 IF VARTYPE(MNOMOR) <> 'C'
    MNOMOR = '8' + RIGHT('000' + ALLTRIM(TRANSFORM(RANDOM(0,999),'999')),3)
 ENDIF 
 IF VARTYPE(MASET) <> 'N'
    MASET = 0
 ENDIF 
 IF VARTYPE(MPROG) <> 'N'
    MPROG = 2
 ENDIF 
 IF VARTYPE(MTGL) <> 'D'
    MTGL = TGLNOW
 ENDIF 
 MKODE = ''
 MKE = 1
 MKDASET = RIGHT('0000' + ALLTRIM(STR(MASET)),3)
 DO WHILE .T.
    IF MKE > 4
       EXIT 
    ENDIF 
    MANGKA = RANDOM(1,36)
    DO CASE 
    CASE MPROG = 1
       IF MKE = 1
          IF MOD(MANGKA,3) = 0
             MKODE = MKODE + SUBSTR(NKEY,MANGKA,1)
             MKE = MKE + 1
          ENDIF 
       ELSE 
          IF MKE > 1
             MURUT = INT((RANDOM(0,3) * 10) / 4) + VAL(SUBSTR(MKDASET,MKE - 1,1))
             MKODE = MKODE + SUBSTR(NKEY,MURUT,1)
             MKE = MKE + 1
          ENDIF 
       ENDIF 
    CASE MPROG = 2
       IF MKE = 1
          IF MOD(MANGKA,3) = 1
             MKODE = MKODE + SUBSTR(NKEY,MANGKA,1)
             MKE = MKE + 1
          ENDIF 
       ELSE 
          IF MKE > 1
             MURUT = (RANDOM(1,8) * 4) + VAL(SUBSTR(MKDASET,MKE - 1,1))
             MKODE = MKODE + SUBSTR(NKEY,MURUT,1)
             MKE = MKE + 1
          ENDIF 
       ENDIF 
    CASE MPROG = 3
       IF MKE = 1
          IF MOD(MANGKA,3) = 2
             MKODE = MKODE + SUBSTR(NKEY,MANGKA,1)
             MKE = MKE + 1
          ENDIF 
       ELSE 
          IF MKE > 1
             MURUT = (RANDOM(1,2) * 10) + VAL(SUBSTR(MKDASET,MKE - 1,1)) + 1
             MKODE = MKODE + SUBSTR(NKEY,MURUT,1)
             MKE = MKE + 1
          ENDIF 
       ENDIF 
    ENDCASE 
 ENDDO 
 MTGLJT = MTGL - CTOD('01-01-2015')
 MHIT = RIGHT('0000' + ALLTRIM(STR(MTGLJT)),4)
 MKE = 1
 A = 1
 DO WHILE .T.
    IF MKE > 4
       EXIT 
    ENDIF 
    MANGKA = RANDOM(1,36)
    HITUNG =  ;
         INT((MANGKA - VAL(SUBSTR(MHIT,MKE,1))) / 10) * 10 + VAL(SUBSTR(MHIT,MKE,1))
    MKODE = MKODE + SUBSTR(NKEY,HITUNG,1)
    MKE = MKE + 1
 ENDDO 
 MKE = 1
 DO WHILE .T.
    IF MKE > 5
       EXIT 
    ENDIF 
    MANGKA = RANDOM(1,36)
    HITUNG =  ;
         INT((MANGKA - VAL(SUBSTR(MHIT,MKE,1))) / 10) * 10 + VAL(SUBSTR(MNOMOR,MKE,1))
    MKODE = MKODE + SUBSTR(NKEY,HITUNG,1)
    MKE = MKE + 1
 ENDDO 
 RETURN MKODE
ENDPROC
*------
PROCEDURE bacaRegister
 PARAMETER MKODE
 NKEY = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
 NKEY = 'ABC0DE1FG2HI3JK4LM5NO6PQ7RS8TU9VWXYZ'
 MSTAT = ''
 MASET = ''
 MTGLJT = TGLNOW
 MNOPROG = ''
 KDPROG = ''
 MHR = ''
 FOR A = 1 TO 12
    IF A = 1
       MHRF = SUBSTR(MKODE,A,1)
       MKD = MOD(AT(MHRF,NKEY),3)
       DO CASE 
       CASE MKD = 0
          KDPROG = '1'
       CASE MKD = 1
          KDPROG = '2'
       CASE MKD = 2
          KDPROG = '3'
       ENDCASE 
       MSTAT = KDPROG
       KDPROG = ''
    ENDIF 
    IF A > 1 AND A < 5
       MHRF = SUBSTR(MKODE,A,1)
       MKE = AT(MHRF,NKEY)
       MKE = MOD(MKE,10) - 1
       KDPROG = KDPROG + ALLTRIM(STR(MKE))
       IF A = 4
          MASET = VAL(KDPROG)
          KDPROG = ''
       ENDIF 
    ENDIF 
    IF A >= 6 AND A < 9
       MHRF = SUBSTR(MKODE,A,1)
       MKE = AT(MHRF,NKEY)
       MHIT = MOD(MKE,10)
       MHR = MHR + ALLTRIM(STR(MHIT))
       IF A = 8
          MTGLJT = CTOD('01-01-2015') + VAL(MHR)
          KDPROG = '8'
       ENDIF 
    ENDIF 
    IF A > 9
       MHRF = SUBSTR(MKODE,A,1)
       MKE = AT(MHRF,NKEY)
       KDPROG = KDPROG + ALLTRIM(STR(MOD(MKE,10)))
    ENDIF 
 ENDFOR 
 DEFAREGASET = MASET
 DEFAREGKANTOR = KDPROG
 DEFAREGTGLJT = MTGLJT
 DEFAREGSTAT = MSTAT
 RETURN 
ENDPROC
*------
PROCEDURE RANDOM
 PARAMETER ANLOW , ANHIGH
 IF PARAMETERS() < 1
    ANLOW = 1
    ANHIGH = 100
 ENDIF 
 LNRNUMBER = INT((RAND() * (ANHIGH - ANLOW + 1)) + ANLOW)
 RETURN LNRNUMBER
ENDPROC
*------
PROCEDURE Cret
 PARAMETER A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10
 MRET = ''
 FOR KE = 1 TO 10
    VKE = ALLTRIM(STR(KE))
     IF VARTYPE(a&vke)="L"
    RETURN MRET
 ENDIF 
  IF VARTYPE(a&vke)="C"
  mret=mret+a&vke+'|'
 ENDIF 
  IF VARTYPE(a&vke)="D"
  mret=mret+DTOC(a&vke)+'|'
 ENDIF 
  IF VARTYPE(a&vke)="N"
  mret=mret+ALLTRIM(STR(a&vke))+'|'
 ENDIF 
 ENDFOR 
 RETURN MRET
ENDPROC
*------
PROCEDURE bacaret
 PARAMETER MTEXT , MKE
 AA = 1
 DO WHILE .T.
 IF AT('|',MTEXT) = 0
 EXIT 
 ENDIF 
 MKATA = LEFT(MTEXT,AT('|',MTEXT) - 1)
 MTEXT = SUBSTR(MTEXT,AT('|',MTEXT) + 1)
 IF AA = MKE
 EXIT 
 ENDIF 
 AA = AA + 1
 ENDDO 
 RETURN MKATA
ENDPROC
*------
PROCEDURE GetArg
 LPARAMETER TCARGUMENT , TCARGNO , TCSEPARATOR
 IF PARAMETERS() < 3 .OR. TCSEPARATOR == ''
 TCSEPARATOR = ';'
 ENDIF 
 TCARGUMENT =  ;
      TCSEPARATOR + TCSEPARATOR + TCARGUMENT + REPLICATE(TCSEPARATOR,MAX(0,TCARGNO))
 TCARGUMENT =  ;
      SUBSTR(TCARGUMENT,AT(TCSEPARATOR,TCARGUMENT,MAX(0,TCARGNO) + 1) + 1)
 RETURN LEFT(TCARGUMENT,AT(TCSEPARATOR,TCARGUMENT) - 1)
ENDPROC
*------
PROCEDURE GetFocus
 DECLARE INTEGER GetFocus IN user32 AS GetFocus
 RETURN GETFOCUS()
ENDPROC
*------
PROCEDURE cektanggal
 PARAMETER VTGL
 LOCAL OLDSELECT , MBOLEH
 MBOLEH = .F.
 OLDSELECT = SELECT()
 CSQL =  ;
      "select tglawal,tglakhir from batastanggal where kantor='" + DEFAKANTOR + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'BATASTANGGAL')
 IF VTGL >= TGLAWAL AND VTGL <= TGLAKHIR
 MBOLEH = .T.
 ENDIF 
 SELECT (OLDSELECT)
 RETURN MBOLEH
ENDPROC
*------
PROCEDURE namakantor
 PARAMETER MKANTOR
 LOCAL OLDSELECT , MNAMAKANTOR
 OLDSELECT = SELECT()
 CSQL =  ;
      "select keterangan from setsandi where kantor='ID' and kode='KNT' and sandi='" +  ;
MKANTOR + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'xkantor')
 MNAMAKANTOR = IIF(ISNULL(KETERANGAN),'',KETERANGAN)
 USE 
 SELECT (OLDSELECT)
 RETURN MNAMAKANTOR
ENDPROC
*------
PROCEDURE ubahdesktop
 MFILE = GETFILE('JPG,BMP,PNG','Ambil Gambar','Ambil')
 RETURN MFILE
ENDPROC
*------
PROCEDURE cekversidbf
       CSQL = "select keterangan from setsandi where kantor='ID' and kode='VER'"
       LCEK = SQLEXEC(OODBC,CSQL,'smt')
       MVERSINOW = '003'
       IF EMPTY(KETERANGAN) .OR. KETERANGAN <> MVERSINOW .OR. RECCOUNT() = 0
            IF RECCOUNT() = 0
                CSQL =   'insert into setsandi (kantor,kode,keterangan,inpopr) values (' + "'ID','VER','" +  ;
                                 MVERSINOW + "','SYSTEM')"
                LCEK = SQLEXEC(OODBC,CSQL)
                IF LCEK < 1
                       MESSAGEBOX(CSQL)
               ENDIF 
          ELSE 
               CSQL =  ;
                               "update setsandi set keterangan='" + MVERSINOW +  ;
			"' where kantor='ID' and kode='VER'"
 		LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 CSQL =  ;
      'CREATE TABLE `urutnota` (' + "kantor      VARCHAR( 4 ) NOT NULL DEFAULT '0001'," +  ;
"statusnomor VARCHAR( 1 ) NOT NULL DEFAULT '0'," +  ;
"kas         VARCHAR( 6 ) NOT NULL DEFAULT 'KAS'," +  ;
"nomorbukti  VARCHAR( 10 ) NOT NULL DEFAULT ''," + 'INDEX ( `kantor` ))'
 CSQL = SQLEXEC(OODBC,CSQL)
 CSQL =  ;
      'ALTER TABLE `anggota` ADD `pekerjaan` VARCHAR(20), ADD statuskawin  VARCHAR(15)'
 LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 RETURN 
ENDPROC
*------
PROCEDURE CekChar
 PARAMETER MKATA
 MKATA = STRTRAN(MKATA,"'","\'")
 RETURN MKATA
ENDPROC
*------
PROCEDURE sldsimp
 PARAMETER MNOREK , MTGL
 LOCAL MSALDO , OLDSELE , CSQL
 OLDSELE = SELECT()
 CSQL =  ;
      "select saldo from simpanan_mutasi where norek='" + MNOREK +  ;
"' and iddata=(select MAX(iddata) from simpanan_mutasi where norek='" + MNOREK +  ;
"' and tanggal<='" + SQLDATE(MTGL) + "')"
 LCEK = SQLEXEC(OODBC,CSQL,'AA')
 MSALDO = IIF(ISNULL(SALDO),0,SALDO)
 MSALDO = IIF(VARTYPE(MSALDO) = 'C',VAL(MSALDO),MSALDO)
 USE 
 SELECT (OLDSELE)
 RETURN MSALDO
ENDPROC
*------
PROCEDURE dbf2cursor
 PARAMETER MHASIL , MDATA1 , MDATA2 , MDATA3 , MDATA4
 CSQL =  ;
      "select column_name,column_type from information_schema.columns where table_schema='sbu' and table_name='" +  ;
MDATA1 + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
 MCUR = 'CREATE CURSOR ' + MHASIL + ' ( '
 DO WHILE  .NOT. EOF()
 MFIELD = ALLTRIM(COLUMN_NAME)
 DO CASE 
 CASE LEFT(COLUMN_TYPE,6) = 'double'
 MTYPE = 'int(12)'
 CASE LEFT(COLUMN_TYPE,6) = 'tinyin'
 MTYPE = 'int(6)'
 CASE LEFT(COLUMN_TYPE,6) = 'decima'
 MTYPE = 'N(5,2)'
 OTHERWISE 
 MTYPE = COLUMN_TYPE
 ENDCASE 
 IF AT(' ' + MFIELD + ' ',MCUR) = 0
 MCUR = MCUR + MFIELD + ' ' + MTYPE + ', '
 ENDIF 
 SKIP 
 ENDDO 
 IF VARTYPE(MDATA2) = 'C'
 CSQL =  ;
      "select column_name,column_type from information_schema.columns where table_schema='sbu' and table_name='" +  ;
MDATA2 + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
 DO WHILE  .NOT. EOF()
 MFIELD = ALLTRIM(COLUMN_NAME)
 DO CASE 
 CASE LEFT(COLUMN_TYPE,6) = 'double'
 MTYPE = 'int(12)'
 CASE LEFT(COLUMN_TYPE,6) = 'tinyin'
 MTYPE = 'int(6)'
 CASE LEFT(COLUMN_TYPE,6) = 'decima'
 MTYPE = 'N(5,2)'
 OTHERWISE 
 MTYPE = COLUMN_TYPE
 ENDCASE 
 IF AT(' ' + MFIELD + ' ',MCUR) = 0
 MCUR = MCUR + MFIELD + ' ' + MTYPE + ', '
 ENDIF 
 SKIP 
 ENDDO 
 ENDIF 
 IF VARTYPE(MDATA3) = 'C'
 CSQL =  ;
      "select column_name,column_type from information_schema.columns where table_schema='sbu' and table_name='" +  ;
MDATA3 + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
 DO WHILE  .NOT. EOF()
 MFIELD = ALLTRIM(COLUMN_NAME)
 DO CASE 
 CASE LEFT(COLUMN_TYPE,6) = 'double'
 MTYPE = 'int(12)'
 CASE LEFT(COLUMN_TYPE,6) = 'tinyin'
 MTYPE = 'int(6)'
 CASE LEFT(COLUMN_TYPE,6) = 'decima'
 MTYPE = 'N(5,2)'
 OTHERWISE 
 MTYPE = COLUMN_TYPE
 ENDCASE 
 IF AT(' ' + MFIELD + ' ',MCUR) = 0
 MCUR = MCUR + MFIELD + ' ' + MTYPE + ', '
 ENDIF 
 SKIP 
 ENDDO 
 ENDIF 
 IF VARTYPE(MDATA4) = 'C'
 CSQL =  ;
      "select column_name,column_type from information_schema.columns where table_schema='sbu' and table_name='" +  ;
MDATA4 + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
 DO WHILE  .NOT. EOF()
 MFIELD = ALLTRIM(COLUMN_NAME)
 DO CASE 
 CASE LEFT(COLUMN_TYPE,6) = 'double'
 MTYPE = 'int(12)'
 CASE LEFT(COLUMN_TYPE,6) = 'tinyin'
 MTYPE = 'int(6)'
 CASE LEFT(COLUMN_TYPE,6) = 'decima'
 MTYPE = 'N(5,2)'
 OTHERWISE 
 MTYPE = COLUMN_TYPE
 ENDCASE 
 IF AT(' ' + MFIELD + ' ',MCUR) = 0
 MCUR = MCUR + MFIELD + ' ' + MTYPE + ', '
 ENDIF 
 SKIP 
 ENDDO 
 ENDIF 
 MCUR = LEFT(MCUR,LEN(MCUR) - 2)
 MCUR = MCUR + ')'
  &mcur
 RETURN 
ENDPROC
*------
PROCEDURE myprint
 PARAMETER MON , MFONT , MSIZE , MBOLD
 IF MON = 'ON'
     IF PARAMETERS() < 2
         MFONT = 'DRAFT'
     ENDIF 
     IF PARAMETERS() < 3
         MSIZE = 8
     ENDIF 
 IF PARAMETERS() < 4
 MBOLD = 'N'
 ENDIF 
  IF SYS(13) = 'OFFLINE'
  MESSAGEBOX('Printer Tidak Tersedia',48,'')
 RETURN .F.
 ENDIF 
 LCPF_NAME = SET('PRINTER',3)
 SET PRINTER TO NAME (LCPF_NAME)
 SET PRINTER ON
 SET DEVICE TO PRINTER
 SET CONSOLE OFF
 SET PRINTER FONT MFONT , MSIZE STYLE MBOLD
 ELSE 
 SET PRINTER OFF
 SET PRINTER TO
 *SET  ???SET[54] 90
 SET CONSOLE ON
 SET DEVICE TO SCREEN
 ENDIF 
 RETURN .T.
ENDPROC
*------
PROCEDURE cetakvalidasi
 PARAMETER MNAMACETAK , MBARIS1 , MBARIS2 , MBARIS3 , MBARIS4
 LOCAL OLDSELECT
 OLDSELECT = SELECT()
 MFRX = 'C:\CTK.FRX'
 MFRT = STRTRAN(MFRX,'.FRX','.FRT')
 SELECT 0
 CSQL = "select * from set_cetakfrx where namafrx='" + MNAMACETAK + "'"
 LCEK = SQLEXEC(OODBC,CSQL,'smt')
 STORE 0 TO MBARIS , MBRSHAL1 , MHEIGHT , MANTARA , LNOMOR , LTANGGAL , LKODE , LDEBET ,  ;
      LKREDIT , LSALDO , LOPT
 DO WHILE  .NOT. EOF()
 DO CASE 
 CASE OBJCODE = 1
 MBARIS = BARIS
 MBRSHAL1 = BRSHAL1
 MHEIGHT = HEIGHT
 MANTARA = ANTARA
 CASE ALLTRIM(EXPR) = 'nomor'
 LNOMOR = HPOS
 CASE ALLTRIM(EXPR) = 'tanggal'
 LTANGGAL = HPOS
 CASE ALLTRIM(EXPR) = 'kode'
 LKODE = HPOS
 CASE ALLTRIM(EXPR) = 'debet'
 LDEBET = HPOS
 CASE ALLTRIM(EXPR) = 'kredit'
 LKREDIT = HPOS
 CASE ALLTRIM(EXPR) = 'saldo'
 LSALDO = HPOS
 CASE ALLTRIM(EXPR) = 'opt'
 LOPT = HPOS
 ENDCASE 
 SKIP 
 ENDDO 
 SELECT 0
 CREATE CURSOR ctk ( CETAK C ( 80 ) )
 APPEND BLANK
 REPLACE CETAK WITH MBARIS1
 APPEND BLANK
 REPLACE CETAK WITH MBARIS2
 APPEND BLANK
 REPLACE CETAK WITH MBARIS3
 APPEND BLANK
 REPLACE CETAK WITH MBARIS4
 GO TOP
 IF DEFAUSERID = 'IMR'
 REPORT FORM ctk_validasi PREVIEW 
 ELSE 
 REPORT FORM ctk_validasi TO PRINTER
 ENDIF 
 USE 
 SELECT (OLDSELECT)
 RETURN 
ENDPROC
*------
PROCEDURE bukafile
 LPARAMETER TCFILENAME , TCWORKDIR , TCOPERATION
 LOCAL LCFILENAME , LCWORKDIR , LCOPERATION , LNCALLSTAT , LCMSGREPLY
 LNCALLSTAT = 0
 LNMSGREPLY = 0
 IF EMPTY(TCFILENAME)
 RETURN -1
 ENDIF 
 LCFILENAME = ALLTRIM(TCFILENAME)
 LCWORKDIR = IIF(TYPE('tcWorkDir') = 'C',ALLTRIM(TCWORKDIR),'')
 LCOPERATION =  ;
      IIF(TYPE('tcOperation') = 'C' .AND.  .NOT. EMPTY(TCOPERATION),ALLTRIM(TCOPERATION),'Open')
 DECLARE INTEGER ShellExecute IN SHELL32.DLL INTEGER , STRING , STRING , STRING , STRING ,  ;
      INTEGER 
 LCCALLSTAT = SHELLEXECUTE(0,LCOPERATION,LCFILENAME,'',LCWORKDIR,1)
ENDPROC
*------
PROCEDURE cekkelneraca
 CSQL =  ;
      "select ket2,keterangan from setsandi where kantor='" + DEFAKANTOR +  ;
"' and kode='SYS' and sandi='PUB'"
 LCEK = SQLEXEC(OODBC,CSQL,'SMT')
 * guntur
 MESSAGEBOX(csql)
 
 MMODEL = VAL(CARIPUBLIC('NRC_MODEL'))
 MKEL = ''
 MKELDATA = ''
 MNRC_AKT = ALLTRIM(CARIPUBLIC('NRC_AKT'))
 MNRC_PSV = ALLTRIM(CARIPUBLIC('NRC_PSV'))
 MNRC_ADM = ALLTRIM(CARIPUBLIC('NRC_ADM'))
 MNRC_PO = ALLTRIM(CARIPUBLIC('NRC_PO'))
 MNRC_PL = ALLTRIM(CARIPUBLIC('NRC_PL'))
 MNRC_BB = ALLTRIM(CARIPUBLIC('NRC_BB'))
 MNRC_BO = ALLTRIM(CARIPUBLIC('NRC_BO'))
 MNRC_PNO = ALLTRIM(CARIPUBLIC('NRC_PNO'))
 MNRC_BNO = ALLTRIM(CARIPUBLIC('NRC_BNO'))
 MNRC_EKU = ALLTRIM(CARIPUBLIC('NRC_EKU'))
 MNRC_BB1 = MNRC_BB
 MNRC_BB2 = ''
 *guntur
 MESSAGEBOX( mnrc_bb)
 IF AT(',',MNRC_BB) > 0
 	MNRC_BB1 = LEFT(MNRC_BB,AT(',',MNRC_BB) - 1)
	 MNRC_BB2 = SUBSTR(MNRC_BB,AT(',',MNRC_BB) + 1)
 ENDIF 
 
 MNRC_PO1 = MNRC_PO
 MNRC_PO2 = ''
 IF AT(',',MNRC_PO) > 0
 	MNRC_PO1 = LEFT(MNRC_PO,AT(',',MNRC_PO) - 1)
 	MNRC_PO2 = SUBSTR(MNRC_PO,AT(',',MNRC_PO) + 1)
 ENDIF 
 
 MNRC_PL1 = MNRC_PL
 MNRC_PL2 = ''
 MNRC_PL3 = ''
 IF AT(',',MNRC_PL) > 0
	MNRC_PL1 = LEFT(MNRC_PL,AT(',',MNRC_PL) - 1)
 	MNRC_PLA = SUBSTR(MNRC_PL,AT(',',MNRC_PL) + 1)
	MNRC_PL2 = SUBSTR(MNRC_PLA,AT(',',MNRC_PLA) - 1)
 	NRC_PL3 = SUBSTR(MNRC_PLA,AT(',',MNRC_PLA) + 1)
 ENDIF 
 CSQL = "update perkiraan set keldata='40' where '1'"
 LCEK = SQLEXEC(OODBC,CSQL)
 CSQL =  ;
      "update perkiraan set kel='NA', keldata='NA' where LEFT(noper," +  ;
		LTRIM(STR(LEN(MNRC_AKT))) + ")='" + MNRC_AKT + "'"

 LCEK = SQLEXEC(OODBC,CSQL)
 MESSAGEBOX('upd kel Na : '+csql)
 CSQL =  ;
      "update perkiraan set kel='NP', keldata='NP' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_PSV))) + ")='" + MNRC_PSV + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
 CSQL =  ;
      "update perkiraan set kel='AD', keldata='AD' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_ADM))) + ")='" + MNRC_ADM + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
 CSQL =  ;
      "update perkiraan set kel='RA', keldata='11' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_PO1))) + ")='" + MNRC_PO1 + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
 
 IF  .NOT. EMPTY(MNRC_PO2)
	 CSQL =  ;
    	  "update perkiraan set kel='RA', keldata='11' where LEFT(noper," +  ;
			ALLTRIM(STR(LEN(MNRC_PO2))) + ")='" + MNRC_PO2 + "'"
 	LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
 CSQL =  ;
  	    "update perkiraan set kel='RA', keldata='" + IIF(MMODEL = 2,'13','11') +  ;
		"' where LEFT(noper," + ALLTRIM(STR(LEN(MNRC_PL))) + ")='" + MNRC_PL + "'"
	 LCEK = SQLEXEC(OODBC,CSQL)
	 
 CSQL =  ;
     	 "update perkiraan set kel='RP', keldata='21' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_BO))) + ")='" + MNRC_BO + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
 
 CSQL =  ;
    	  "update perkiraan set kel='RP', keldata='" + IIF(MMODEL = 3,'21','12') +  ;
		"' where LEFT(noper," + ALLTRIM(STR(LEN(MNRC_BB1))) + ")='" + MNRC_BB1 + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
 
 IF  .NOT. EMPTY(MNRC_BB2)
	 CSQL =  ;
  	    "update perkiraan set kel='RP', keldata='" + IIF(MMODEL = 3,'21','12') +  ;
		"' where LEFT(noper," + ALLTRIM(STR(LEN(MNRC_BB2))) + ")='" + MNRC_BB2 + "'"
 	LCEK = SQLEXEC(OODBC,CSQL)
 ENDIF 
	 CSQL =  ;
  	    "update perkiraan set kel='RAx', keldata='31' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_PNO))) + ")='" + MNRC_PNO + "'"
	 LCEK = SQLEXEC(OODBC,CSQL)
	 MESSAGEBOX('upd kel MNRC_PNO : '+csql)
 	CSQL =  ;
  	    "update perkiraan set kel='RPx', keldata='31' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_BNO))) + ")='" + MNRC_BNO + "'"
 	LCEK = SQLEXEC(OODBC,CSQL)
 	
 CSQL =  ;
      "update perkiraan set kel='NP', keldata='NP' where LEFT(noper," +  ;
		ALLTRIM(STR(LEN(MNRC_EKU))) + ")='" + MNRC_EKU + "'"
 LCEK = SQLEXEC(OODBC,CSQL)
ENDPROC

*------
PROCEDURE DeclareAPIs
 DECLARE INTEGER WSAStartup IN wsock32 INTEGER , STRING @
 DECLARE INTEGER WSACleanup IN wsock32
 DECLARE INTEGER gethostname IN wsock32 STRING @ , INTEGER 
 DECLARE INTEGER gethostbyname IN wsock32 STRING 
 DECLARE RtlMoveMemory IN kernel32 AS Heap2Str STRING @ , INTEGER , INTEGER 
ENDPROC
*------
PROCEDURE IPPortion
 LPARAMETER NPOINTER
 LOCAL LNADDRESS , LCRESULT
 LNADDRESS = BUF2DWORD(MEMORYBUFFER(NPOINTER,4))
 RETURN IIF(LNADDRESS <> 0,JUSTIP(MEMORYBUFFER(LNADDRESS,4)),'')
ENDPROC
*------
PROCEDURE JustIP
 LPARAMETER CBUFFER
 LOCAL LCRESULT , LNCOUNTER
 LCRESULT = ''
 FOR LNCOUNTER = 1 TO 4
 LCRESULT =  ;
      LCRESULT + LTRIM(STR(ASC(SUBSTR(CBUFFER,LNCOUNTER)))) + IIF(LNCOUNTER = 4,'','.')
 ENDFOR 
 RETURN LCRESULT
ENDPROC
*------
PROCEDURE buf2word
 LPARAMETER CBUFFER
 RETURN ASC(SUBSTR(CBUFFER,1,1)) + ASC(SUBSTR(CBUFFER,2,1)) * 256
ENDPROC
*------
PROCEDURE buf2dword
 LPARAMETER CBUFFER
 RETURN ASC(SUBSTR(CBUFFER,1,1)) + BITLSHIFT(ASC(SUBSTR(CBUFFER,2,1)),8) +  ;
BITLSHIFT(ASC(SUBSTR(CBUFFER,3,1)),16) + BITLSHIFT(ASC(SUBSTR(CBUFFER,4,1)),24)
ENDPROC
*------
PROCEDURE MemoryBuffer
 LPARAMETER NADDRESS , NBUFFERSIZE
 LOCAL LCBUFFER
 LCBUFFER = SPACE(NBUFFERSIZE)
 = HEAP2STR(@LCBUFFER,NADDRESS,NBUFFERSIZE)
 RETURN LCBUFFER
ENDPROC
*------
PROCEDURE myhostname
 LOCAL LCBUFFER , LNRESULT , LCHOSTNAME , LCMESSAGE , LCHOSTENTSTRUCT
 LCBUFFER = SPACE(398)
 LNRESULT = WSASTARTUP(514,@LCBUFFER)
 LCMESSAGE = ''
 LCHOSTNAME = ''
 IF LNRESULT = 0
 LCBUFFER = REPLICATE(CHR(0),256)
 LNRESULT = GETHOSTNAME(@LCBUFFER,256)
 IF LNRESULT = 0
 LCHOSTNAME = STRTRAN(LCBUFFER,CHR(0),'')
 ENDIF 
 ENDIF 
 = WSACLEANUP()
 RETURN LCHOSTNAME
ENDPROC
*------
PROCEDURE myipaddress
 LOCAL LCBUFFER , LNRESULT , LCHOSTNAME , LCMESSAGE , LCHOSTENTSTRUCT
 LCBUFFER = SPACE(398)
 LNRESULT = WSASTARTUP(514,@LCBUFFER)
 LCMESSAGE = ''
 MIP = ''
 IF LNRESULT = 0
 LCBUFFER = REPLICATE(CHR(0),256)
 LNRESULT = GETHOSTNAME(@LCBUFFER,256)
 IF LNRESULT = 0
 LCHOSTNAME = STRTRAN(LCBUFFER,CHR(0),'')
 LNRESULT = GETHOSTBYNAME(LCHOSTNAME)
 IF LNRESULT <> 0
 LCHOSTENTSTRUCT = MEMORYBUFFER(LNRESULT,16)
 LNRESULT = BUF2DWORD(SUBSTR(LCHOSTENTSTRUCT,13,4))
 IF LNRESULT <> 0
 MIP = IPPORTION(LNRESULT)
 ENDIF 
 ENDIF 
 ENDIF 
 ENDIF 
 = WSACLEANUP()
 RETURN MIP
ENDPROC
*------*
PROCEDURE cekadadatabased
     	mDBF = READINI2("CONECTION", "DATABASED", "", "TERRA.INI")
      	CSQL =   "select table_name from information_schema.columns where table_schema='"+mDBF+"'  and table_name='anggota_shu'"
 	LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
           *******************
           LOCATE FOR table_name='anggota_shu'
           IF !FOUND()
                 csql="CREATE TABLE `anggota_shu` ("+;
		  "`iddata` int(11) NOT NULL AUTO_INCREMENT,"+;
		  "`kantor` varchar(4) NOT NULL,"+;
		  "`cif` varchar(10) NOT NULL,"+;
		  "`tanggal` date NOT NULL,"+;
		  "`tahun` varchar(4) NOT NULL,"+;
		  "`kd` varchar(2) NOT NULL,"+;
		  "`pokok` double(15,0) DEFAULT '0',"+;
		  "`wajib` double(15,0) DEFAULT '0',"+;
		  "`simpanan1` double(15,0) NOT NULL,"+;
		  "`simpanan2` double(15,0) NOT NULL,"+;
		  "`shu_simpanan` double(15,0) NOT NULL,"+;
		  "`pinjaman` double(15,0) NOT NULL,"+;
		  "`shu_pinjaman` double(15,0) NOT NULL,"+;
		  "`shu_total` double(15,0) NOT NULL,"+;
		  "PRIMARY KEY (`iddata`),"+;
		  "KEY `cif` (`cif`,`tanggal`)"+;
		  ") ENGINE=MyISAM AUTO_INCREMENT=79525 DEFAULT CHARSET=latin1"
		lcek=SQLEXEC(oODBC,csql)

           ENDIF 
           *----- upgrade databased setsandi_tab
           CSQL =   "select table_name,column_name from information_schema.columns where table_schema='"+mDBF+"'  and table_name='setsandi_tab'"
           LCEK = SQLEXEC(OODBC,CSQL,'MDBF')
           
           LOCATE  FOR UPPER(column_name)="SHU"
           IF !FOUND()
               csql="ALTER TABLE  `setsandi_tab` ADD  `SHU` TINYINT( 1 ) NOT NULL DEFAULT  '2' AFTER  `TUTUPSALDO` "
               lcek=SQLEXEC(oODBC,csql)
               
           ENDIF 
           LOCATE  FOR UPPER(column_name)="METODE"
           IF !FOUND()
                 csql="ALTER TABLE  `setsandi_tab` ADD  `METODE` TINYINT( 1 ) NOT NULL DEFAULT  '2' AFTER  `SHU` "
                 lcek=SQLEXEC(oODBC,csql)
                
           ENDIF 
 ENDPROC 
 FUNCTION lokasikerja
       PARAMETERS mKode
       oldselect=SELECT()
       csql="select keterangan from setsandi where kantor='"+ALLTRIM(defakantor)+"' and kode='P003' and sandi='"+mkode+"'"
       lcek=SQLEXEC(oODBC,csql,"dbflokasi")
       mlokasi=keterangan
       USE
       SELECT(oldselect)
       RETURN mlokasi
 ENDFUNC 
 
  FUNCTION ttdlaporan
       PARAMETERS mposisi
       oldselect=SELECT()
        CSQL = "select ket2,keterangan from setsandi where kantor='" + DEFAKANTOR + "' and kode='SYS' and sandi='PUB' and  ket2='"+mposisi+"'"
       lcek=SQLEXEC(oODBC,csql,"dbfttdlap")
       mttdlap=keterangan
       USE
       SELECT(oldselect)
       RETURN mttdlap
 ENDFUNC 
 
 FUNCTION usercetaklap
       mctk=TTOC(DATETIME())+"-"+DefaUseriD
       RETURN mctk 
ENDFUNC  

FUNCTION bacamemo(mvariabel,cData)
  local mnilai
  mdata1=SUBSTR(cData,at("CREATE TABLE `"+ALLTRIM(mtabel),cData))
  mData2=LEFT(mdata1,at('/*Table structure',mData1))
  return mData2

PROCEDURE ambilMem
  PARAMETERS mstrAwal,mStrAkhir
	  mMulai=ATC(mstrAwal, mem)
	  mAkhir=LENC(mem)
	  cData=SUBSTRC(mem,mMulai,mAkhir-mMulai)
	  mAkhir=RATC(mStrAkhir, cData)
	   cdata=RIGHTC(cData,makhir)
	  
	  *mAkhir=(RATC(mStrAkhir, mem))+LEN(mStrAkhir)
	  *cData=SUBSTRC(mem,mMulai,mAkhir-mMulai)
RETURN cData

FUNCTION PartFileTxt(gnFileHandle, mByte)
    FSEEK(gnFileHandle, 0,1 )  && Posisi Pointer saat ini
    mData = FREAD( gnFileHandle, mByte)
 RETURN mData 
ENDFUNC 
